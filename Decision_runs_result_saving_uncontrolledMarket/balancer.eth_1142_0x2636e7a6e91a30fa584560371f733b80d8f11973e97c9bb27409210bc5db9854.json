{
  "captured_at_utc": "2025-10-08T19:47:57.924065+00:00",
  "snapshot_url": "https://snapshot.org/#/balancer.eth/proposal/0x2636e7a6e91a30fa584560371f733b80d8f11973e97c9bb27409210bc5db9854",
  "focus": null,
  "votes_count": 5,
  "timeline_metrics_current": {
    "unique_voters": 5,
    "total_votes": 5,
    "first_vote_at": "2025-03-21T10:59:56Z",
    "last_vote_at": "2025-03-24T08:00:03Z",
    "series_step_hours": 6.0,
    "summary": "timeline-only analysis (no final tally)",
    "recommended_index": 0,
    "lead_ratio_by_quartile": [
      [
        1.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0
      ],
      [
        1.0,
        0.0,
        0.0
      ]
    ],
    "lead_ratio_total": [
      1.0,
      0.0,
      0.0
    ],
    "stability": [
      1.0,
      0.0,
      0.0
    ],
    "early_ratio": [
      1.0,
      0.0,
      0.0
    ],
    "vp_by_quartile": [
      [
        326056.3114102613,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0
      ],
      [
        2588451.1624970958,
        0.0,
        0.0
      ]
    ],
    "spike_index": 0.819007,
    "spike_follow_support_ratio": 0.0,
    "stairwise_ratio": 0.180993,
    "half_slope_diff": 12698.401435
  },
  "adjacent_analytics": [
    {
      "id": "0xb7dc73580560446a20adc7bf79bce1d52a1ab32aee6154fce0441eea51307eb0",
      "title": "[BIP-797] Wire Up V3 Protocol Fee Processing Permissions",
      "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
      "end_utc": "2025-03-17T19:00:00Z",
      "timeline_metrics": {
        "unique_voters": 3,
        "total_votes": 3,
        "first_vote_at": "2025-03-14T16:17:41Z",
        "last_vote_at": "2025-03-17T08:00:01Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            332668.03699530207,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            2569180.8785562604,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.821466,
        "spike_follow_support_ratio": 0.0,
        "stairwise_ratio": 0.178534,
        "half_slope_diff": 60.492553
      },
      "price_impact_pct": 3.5716,
      "tvl_impact_pct": 1.878,
      "similarity": 0.1233,
      "actual_vote_result": {
        "winner_index": 0,
        "winner_label": "Yes, let's do it",
        "margin_abs": 2901848.915551563,
        "scores_total": 2901848.915551563,
        "margin_pct": 1.0
      }
    },
    {
      "id": "0x5b8e3661ceaba538d7a4b15ec985a173185d7171e97b136668d9ebca1dc91340",
      "title": "[BIP-796] Enable orbETH/waArbWETH Gauge [Arbitrum]",
      "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
      "end_utc": "2025-03-17T19:00:00Z",
      "timeline_metrics": {
        "unique_voters": 3,
        "total_votes": 3,
        "first_vote_at": "2025-03-14T16:18:39Z",
        "last_vote_at": "2025-03-17T08:00:01Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            333394.85084364994,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            2569567.623989421,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.821151,
        "spike_follow_support_ratio": 0.0,
        "stairwise_ratio": 0.178849,
        "half_slope_diff": 60.452666
      },
      "price_impact_pct": 3.5716,
      "tvl_impact_pct": 1.878,
      "similarity": 0.1113,
      "actual_vote_result": {
        "winner_index": 0,
        "winner_label": "Yes, let's do it",
        "margin_abs": 2902962.4748330708,
        "scores_total": 2902962.4748330708,
        "margin_pct": 1.0
      }
    },
    {
      "id": "0x24e6809af48efac2429f555c8ff2a3b0253f87ca6d6c1b6f5d4644bd6901e1a1",
      "title": "[BIP-795] Kill Stale Gauges Q1 2025",
      "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
      "end_utc": "2025-03-17T19:00:00Z",
      "timeline_metrics": {
        "unique_voters": 3,
        "total_votes": 3,
        "first_vote_at": "2025-03-14T16:19:19Z",
        "last_vote_at": "2025-03-17T08:00:01Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            333396.4450514928,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            2569569.454714459,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.82115,
        "spike_follow_support_ratio": 0.0,
        "stairwise_ratio": 0.17885,
        "half_slope_diff": 60.432768
      },
      "price_impact_pct": 3.5716,
      "tvl_impact_pct": 1.878,
      "similarity": 0.0776,
      "actual_vote_result": {
        "winner_index": 0,
        "winner_label": "Yes, let's do it",
        "margin_abs": 2902965.899765952,
        "scores_total": 2902965.899765952,
        "margin_pct": 1.0
      }
    }
  ],
  "similar_proposals_data": [
    {
      "proposal_id": "0x46b48f89247d28fc26a3851269ca30424b7cfb1dede75b99b77e6a27b998dd19",
      "cleaned": {
        "proposal_id": "0x46b48f89247d28fc26a3851269ca30424b7cfb1dede75b99b77e6a27b998dd19",
        "title": "[BIP-140] Introduce TimelockAuthorizer",
        "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
        "end_utc": "2022-12-26T19:00:00Z",
        "similarity_score": 0.1537,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 4902306.5181895485,
        "margin_pct": 0.9999994237053869,
        "scores_total": 4902309.343364015,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 256,
        "total_votes": 256,
        "first_vote_at": "2022-12-22T19:32:57Z",
        "last_vote_at": "2022-12-26T14:48:03Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            633230.3268563346,
            1.2790044776530447
          ],
          [
            1184995.1699466393,
            0.0
          ],
          [
            265145.2180131165,
            0.0
          ],
          [
            2818937.2159606935,
            0.13358275619786059
          ]
        ],
        "spike_index": 0.544127,
        "spike_follow_support_ratio": 0.999984,
        "stairwise_ratio": 2.3e-05,
        "half_slope_diff": 7.397951
      },
      "raw": {
        "id": "0x46b48f89247d28fc26a3851269ca30424b7cfb1dede75b99b77e6a27b998dd19",
        "title": "[BIP-140] Introduce TimelockAuthorizer",
        "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
        "body": "# **Introduction**\n\nBalancer's access control system is based on permissions, which can be granted and revoked. These are controlled by the `Authorizer` contract, which was deployed along with the `Vault` in April 2021.\n\nThis proposal aims to replace it with the `TimelockAuthorizer`, which provides more fine-grained control over permissions, as well as new security features. It additionally addresses a bug in the `AuthorizerAdaptor` contract that was disclosed via the Immunefi bug bounty program.\n\nFor simplicity, this migration will initially only take place on the main Ethereum network and none of the L2s or sidechains.\n\n# **Specification**\n\nThe `TimelockAuthorizer` contract (developed by Balancer Labs) is a drop-in replacement of the current `Authorizer` contract, enabling new use cases and providing security improvements.\n\nI encourage everyone to read more about each of these improvements, as they will ****greatly impact the operation of the Balancer DAO**** if this proposal where to pass (particularly the 'Delays' section).\n\n## **Granular Permissions**\n\nAs of today, permissions are global: an account with a permission can use it on any contract in the entire network. For singleton contracts (like the `Vault` or the `ProtocolFeeWithdrawer`) this is not an issue since there is only one of them. However, for contracts with multiple instances (like liquidity pools) this means that an account with e.g. permission to set swap fees can use that permission on *_any_* pool of the same type (i.e. that is created in the same factory).\n\n`TimelockAuthorizer` allows granting permissions over a single contract, meaning it will e.g. be possible to allow an account to manage a single pool's swap fees while not being able to do the same on any other pool. This has always been supported on the original `IAuthorizer` interface - the current `Authorizer` simply did not implement this capability (for simplicity).\n\nIt will still be possible to grant global permissions by passing the special sentinel address known as `EVERYWHERE` (equal to `0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF`).\n\n## **Granters and Revokers**\n\nThe current `Authorizer` features a single all-powerful role (`0x00..00`), currently held by the Balancer DAO Governance Multisig (`0x10A19e7eE7d7F8a52822f6817de8ea18204F2e4f`). Accounts with this role can grant and revoke any permission - but they are the only one that can do so.\n\n`TimelockAuthorizer` instead distinguishes between having a permission and being a *_granter_* or a *_revoker_* for a permission. This will increase the capacity of the the DAO Governance Multisig to delegate subtasks to other accounts. For example, instead of simply granting permission to trigger the Liquidity Mining BAL bridging process to the Balancer Labs Operations Multisig, it could make said multisig a *_granter_*, increasing flexibility (e.g. letting Balancer Labs develop contracts that trigger this process automatically and grant them permission to operate without having to involve the Governance Multisig).\n\nThe `TimelockAuthorizer` also has a *_root_* account, initially set to the Balancer DAO Governance Multisig, which always has permission to grant and revoke all permissions, and to create and destroy granters and revokers. These permissions cannot be revoked by anyone (except by transferring *_root_* to a different account), meaning it always retains full control over the system and can safely evict any rogue granters or revokers.\n\n## **Delays**\n\nArguably the most important feature of the `TimelockAuthorizer` is the capacity to assign *_minimum delays_* to certain actions. If an action has a delay, then accounts with that permission cannot immediately execute said action: they can only *_schedule_* an execution at some time in the future (greater than the action's delay).\n\nCritically, these scheduled executions can be cancelled, which lets the community detect and stop malicious or erroneous actions after they are committed on-chain but ****before they are actually executed****, greatly decreasing the risk of user error, phishing attacks, etc. This also provides users who are not happy with a future action (e.g. increased fees) with the opportunity to exit the system before those measures take place.\n\nIt is also possible to assign ****delays to the granting and revoking**** of permissions. By e.g. delaying granting and revoking the permission to mint BAL (currently only held by the automated Liquidity Mining system), we end up with a much stronger committment to said system, and greatly reduce the risk of e.g. a malicious actor somehow acquiring minting capabilities. Similar measures can be applied to other powerful permissions, such as relayer privilege, adding gauge factories to the `GaugeAdder`, etc.\n\nIn general, if a multisig wields a permission (e.g. adding gauges) then its *_execution_* should have a delay (to review the multisig's action). Instead, if a contract wields a permission (e.g. the `GaugeAdder`) then its *_granting_* should be delayed (to review the code of the contract that will use it).\n\nFor more information on how delays relate to security, see [my talk at the DeFi Security Summit](https://www.youtube.com/watch?v=LRTTplIdxfI).\n\n## **Authorizer Adaptor Entrypoint**\n\n[ChainSecurity](https://chainsecurity.com/) submitted a vulnerability disclosure via the [Immunefi bug bounty program](https://immunefi.com/bounty/balancer/) that relates to the operation of the `AuthorizerAdaptor`. Said issue was promptly mitigated and resolved, but operation of some components of the system (particularly adding reward tokens and killing gauges) has been degraded as a result. The `TimelockAuthorizer` includes a fix for this in the form of the `AuthorizerAdaptorEntrypoint`, which provides a secure way to restore regular operation.\n\n# **Migration Procedure**\n\nTo ease the transition to this new system, Balancer Labs has also developed the `TimelockAuthorizerMigrator` contract, which prepares the `TimelockAuthorizer` by granting some of the permissions that exist in the current `Authorizer`, as well as setting up some initial delays.\n\nIn order to complete the migration, the migrator needs permission to call `setAuthorizer` in the `Vault`, which can only be granted by the Balancer DAO Governance Multisig. Additionally, the Multisig must also claim the *_root_* role in the `TimelockAuthorizer`, completing the *_root_* transfer from the migrator to the Multisig. This ****cannot be done before January 5th, 2023****, since the root transfer has a minimum delay of 30 days.\n\n## Execution Details\n\nFrom the Balancer DAO Governance Multisig (`0x10A19e7eE7d7F8a52822f6817de8ea18204F2e4f`):\n\n- Call `grantRole` on the `Authorizer` (`0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6`) with:\n\n* `role`: `0x1cbb503dcc0f4acaedf71a098211ff8b15a220fc26a6974a8d9deaab040fa6e0`\n\n* `account`: `0xf8ee6f1F9B54F9b2C192D703ea2d22112cBC062b`\n\n- Call `claimRoot` on the `TimelockAuthorizer` (`0x9E3cD0606Db55ac68845bB60121847823712ae05`)\n\nThe `role` argument corresponds to [the permission to call `setAuthorizer` on the `Vault`](https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/deployments/action-ids/mainnet/action-ids.json#L30), and `account` is the [`TimelockAuthorizerMigrator`](https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/deployments/tasks/20221202-timelock-authorizer/output/mainnet.json#L2).\n\nThe `TimelockAuthorizer` address can also be found [in its deployment](https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/deployments/tasks/20221202-timelock-authorizer/output/mainnet.json#L4).\n\n**Recall that `claimRoot` cannot be called until January 5th, 2023.**\n\nOnce these two steps are done, any account in the network can call `finalizeMigration` on the `TimelockAuthorizerMigrator` (`0xf8ee6f1F9B54F9b2C192D703ea2d22112cBC062b`) to complete the process.\n\n# **Initial Configuration**\n\n **No new permissions will be granted**. The Migrator contract ensures that all permissions granted during the migration exist in the current `Authorizer`. Some of the current permissions have been left out however, since they no longer apply (e.g. permission to pause the `Vault`, which can no longer be paused as of July 2021).\n\nAny permissions granted after the deployment of the `TimelockAuthorizer` (Nov 30th) **are not automatically migrated**, and will have to be re-granted after the migration.\n\n## **Initial Delays**\n\nThe following actions have initial delays associated to them. As a rule of thumb, I propose that we assign delays to actions with high impact and that do not require urgent execution.\n\n### **Execution**\n\n- `Vault.setAuthorizer`, 30 days. All delays must be shorter or equal to this one, as they could be otherwise bypassed by simply changing the Authorizer and removing delays entirely.\n- `SmartWalletChecker.allowlistAddress`, 7 days. Once veBAL is locked this cannot be undone in any way, so extra care should be taken when adding contracts to the allowlist.\n- `VotingEscrowDelegationProxy.setDelegation`, 14 days. veBAL boost upgrades are infrequent and should be handled with care, since they can greatly affect the veBAL operation.\n- `GaugeAdder.addGaugeFactory`, 14 days. Adding new gauge factories is a critical action as it grants them permission to mint BAL. See [my talk at ETHLatam (in Spanish)](https://www.youtube.com/watch?v=1Y5IDfJQGVk) for more details.\n\n### **Granting**\n\n- `BalancerTokenAdmin.mint`, 30 days. This prevents other accounts from being able to mint BAL.\n- `ProtocolFeesCollector.withdrawCollectedFees`, 30 days. This prevents bypassing the `ProtocolFeesWithdrawer`.\n- `GaugeController.addGauge`, 14 days. This prevents bypassing the `GaugeAadder`.\n- `BALTokenHolder.withdrawFunds`, 7 days. This manages the BAL minted for the veBAL gauge.\n- Vault relayer permissions, 7 days. Relayers are quite powerful, so creating them should be carefully reviewed.\n\nThe creation of the full list of permissions and their delays can be inspected in [this script](https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/deployments/tasks/20221202-timelock-authorizer/input/mainnet.ts).\n\n# **Risk**\n\nThe `TimelockAuthorizer` is a relatively complex contract, which will be used to manage all permissions on the Balancer ecosystem, including the Liquidity Mining program and management of Protocol Fees. As such, care should be taken to review it.\n\nThe Balancer Labs team has been working on this contract for around 8 months, and we are confident in its correctness. It has been [audited by ABDK](https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/audits/abdk/2022-04-15.pdf), and we're currently working with Certora to conduct a second review.",
        "end_utc": "2022-12-26T19:00:00Z",
        "similarity_score": 0.1537,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way"
          ],
          "scores": [
            4902307.930776782,
            1.4125872338509051
          ],
          "scores_total": 4902309.343364015,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2022-12-26T19:00:00",
          "pre_tvl_avg": 905441810.5,
          "post_tvl_avg": 890603327.0,
          "abnormal_change": -1.6388,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.016388,
          "abnormal_change_pct": -1.6388
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2022-12-26T19:00:00",
          "pre_price_avg": 5.4939719149999995,
          "post_price_avg": 5.274847995,
          "abnormal_change": -3.9884,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.039884,
          "abnormal_change_pct": -3.9884
        }
      }
    },
    {
      "proposal_id": "0x23f6e8f79a88c7a94ada7b303a6d74aca1318b15f4e0def8910b8052f0bfc694",
      "cleaned": {
        "proposal_id": "0x23f6e8f79a88c7a94ada7b303a6d74aca1318b15f4e0def8910b8052f0bfc694",
        "title": "[BIP-289] Grant Maxis Permissions to Add Gnosis & zkSync Gauges",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "end_utc": "2023-05-15T18:00:00Z",
        "similarity_score": 0.1536,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 3679958.519118217,
        "margin_pct": 0.9999998032285474,
        "scores_total": 3679959.2432291424,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 142,
        "total_votes": 142,
        "first_vote_at": "2023-05-11T18:02:33Z",
        "last_vote_at": "2023-05-15T16:20:57Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            45896.42431371435,
            0.3571891493818583,
            0.0
          ],
          [
            179920.1426701094,
            0.0,
            0.0
          ],
          [
            92.3835982942195,
            0.004866313790985612,
            0.0
          ],
          [
            3454049.930591562,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.811672,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 1.1e-05,
        "half_slope_diff": 8.55922
      },
      "raw": {
        "id": "0x23f6e8f79a88c7a94ada7b303a6d74aca1318b15f4e0def8910b8052f0bfc694",
        "title": "[BIP-289] Grant Maxis Permissions to Add Gnosis & zkSync Gauges",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "body": "## [Payload PR - BIP-289](https://github.com/BalancerMaxis/multisig-ops/pull/174)\n\n## Background\nThe Gauge Adder v3 was deployed some time ago but only now has become usable after the introduction of the Authorizer Wrapper. This proposal grants the Maxi LM Multisig two roles - one for calling `addGnosisGauge` and one for calling `addZksyncGauge`. Note that we are not fully deployed on zkSync yet.\n\nThis will remove the need to involve the DAO Multisig when adding new gauges.\n\n## English Specification\n\nThe transaction details were generated by [this script](https://github.com/BalancerMaxis/multisig-ops/blob/main/tools/python/gen_add_permissions_payload.py) with inputs and outputs in [this directory](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-289)\n\nThe following files can be found both linked below and in the payload PR linked above:\n\n| Filename                                                                                                                             | Description of Contents                                                                                                              |\n|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------|\n| [inputs.json](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/inputs.json)                                   | The inputs to the script mapping functions and deployments to target addresses that can execute them.                                |\n| [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/results_address_sorted.md)       | The resulting changes printed in a table sorted by target chain and target address. (to easily understand permisisons granted)       |\n| [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/results_deployment_sorted.md) | The resulting changes printed in a table sorted by target chain and target deployment. (for verification against action ids)         |\n| [function_descriptions.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/function_descriptions.md)         | A table that describes what each function that is being granted privileged access to allows.                                         |                                                                                                                                             |\n| [`chainname`.json](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-289/)                                         | For each change with changes, a transaction builder json named after said chain exists to apply the changes described in the tables. |\n\n_More information about the various Balancer Multisigs and their functions can be found in the [multisig-ops repo](https://github.com/BalancerMaxis/multisig-ops/blob/staging/multisigs.md)_\n\n# Specification\n\nAs described in the payload json, the authorizer will be called to grant the roles as described.  \n\nThe change can be reviewed by the below by comparing the [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-183/results_deployment_sorted.md) file to the source of truth,  which should match the order found in the source of truth for actionIds on the [balancer-v2-monorepo](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/action-ids).\n\nFor record, the contents of [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-289/results_address_sorted.md) are printed here:\n\n\n\n| deployment              | chain   | function                | role                                                               | target   | target_address                             |\n|:------------------------|:--------|:------------------------|:-------------------------------------------------------------------|:---------|:-------------------------------------------|\n| 20230109-gauge-adder-v3 | mainnet | addGnosisGauge(address) | 0xe818738e338905496f604a2a26c7ca754558870a3810786cfbb89ae28d262dc5 | lm       | 0xc38c5f97B34E175FFd35407fc91a937300E33860 |\n| 20230109-gauge-adder-v3 | mainnet | addZKSyncGauge(address) | 0x010cab59e1860b78f8f67210e267d2c06d77c17b4529f007c7c8acee11ea2fe0 | lm       | 0xc38c5f97B34E175FFd35407fc91a937300E33860 |\n## Risk Assessment\nThis BIP is routine operation for provisioning a new factory.  The new factories are themselves a risk mitigation.\n\n\n## References\n\n[Monorepo Deployment Addresses](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments)",
        "end_utc": "2023-05-15T18:00:00Z",
        "similarity_score": 0.1536,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way",
            "Abstain"
          ],
          "scores": [
            3679958.88117368,
            0.3620554631728439,
            0
          ],
          "scores_total": 3679959.2432291424,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2023-05-15T18:00:00",
          "pre_tvl_avg": 1107959574.0,
          "post_tvl_avg": 1104989448.5,
          "abnormal_change": -0.2681,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.002681,
          "abnormal_change_pct": -0.2681
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2023-05-15T18:00:00",
          "pre_price_avg": 5.5291013499999995,
          "post_price_avg": 5.53430832,
          "abnormal_change": 0.0942,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.000942,
          "abnormal_change_pct": 0.0942
        }
      }
    },
    {
      "proposal_id": "0x167276289834a906533f0a0696e348fe2c17a25e28dfee844e988e40ba977869",
      "cleaned": {
        "proposal_id": "0x167276289834a906533f0a0696e348fe2c17a25e28dfee844e988e40ba977869",
        "title": "[BIP-253] Permission granting for managed v2, composableStable v4, weighted v4 factories",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "end_utc": "2023-04-24T18:00:00Z",
        "similarity_score": 0.1424,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 3880425.88490397,
        "margin_pct": 1.0,
        "scores_total": 3880425.88490397,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 128,
        "total_votes": 128,
        "first_vote_at": "2023-04-20T18:54:37Z",
        "last_vote_at": "2023-04-24T16:22:46Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            6217.310422563648,
            0.0,
            0.0
          ],
          [
            18.312598055365054,
            0.0,
            0.0
          ],
          [
            551608.3804479057,
            0.0,
            0.0
          ],
          [
            3322581.881435445,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.746499,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 1.2e-05,
        "half_slope_diff": 39.957663
      },
      "raw": {
        "id": "0x167276289834a906533f0a0696e348fe2c17a25e28dfee844e988e40ba977869",
        "title": "[BIP-253] Permission granting for managed v2, composableStable v4, weighted v4 factories",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "body": "## [Payload PR - BIP-253](https://github.com/BalancerMaxis/multisig-ops/pull/142)\n\n## Background\nThe [v4 Weighted Pool Factory](https://github.com/balancer/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230320-weighted-pool-v4) and the [v4 Composable Stable Pool Factory](https://github.com/balancer/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230320-composable-stable-pool-v4) were deployed to allow the use of `create2` instead of `create`. The [v2 Managed Pool Factory](https://github.com/balancer/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230411-managed-pool-v2) allows using `create2`, adds reentrancy protection, and has various other improvements. Some initial \"wire-up\" of permissions is required to bring them into standard function.  This BIP lays out these changes and requests permission to apply them.\n\n## English Specification\n\nThe transaction details were generated by [this script](https://github.com/BalancerMaxis/multisig-ops/blob/main/tools/python/gen_add_permissions_payload.py) with inputs and outputs in [this directory](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-253)\n\nThe following files can be found both linked below and in the payload PR linked above:\n\n| Filename                                                                                                                             | Description of Contents                                                                                                              |\n|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------|\n| [inputs.json](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-253/inputs.json)                                   | The inputs to the script mapping functions and deployments to target addresses that can execute them.                                |\n| [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-253/results_address_sorted.md)       | The resulting changes printed in a table sorted by target chain and target address. (to easily understand permisisons granted)       |\n| [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-253/results_deployment_sorted.md) | The resulting changes printed in a table sorted by target chain and target deployment. (for verification against action ids)         |\n| [function_descriptions.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-253/function_descriptions.md)         | A table that describes what each function that is being granted privileged access to allows.                                         |                                                                                                                                             |\n| [`chainname`.json](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-253/)                                         | For each change with changes, a transaction builder json named after said chain exists to apply the changes described in the tables. |\n\n\nIn the tables above:\n\nThe \"emergency\" caller group:\n - maps to the Balancer Emergency DAO Multisig as defined in [this vote](https://forum.balancer.fi/t/form-the-emergency-subdao/3197).\n\nThe \"feeManager\" caller group:\n - maps to the feeManager multisig controlled by the Balancer Maxis on all chains except mainnet.\n - On mainnet a special feeSetter multisig exists to manage a-factors and a gautletFeeSetter contract that allows bulk changing of fees.  \n - The maxi's functionally control all contracts that make up the feeManager target group.\n\n_More information about the various Balancer Multisigs and their functions can be found in the [multisig-ops repo](https://github.com/BalancerMaxis/multisig-ops/blob/staging/multisigs.md)_\n# Specification\n\nAs described in the payload json, the authorizer will be called to grant the roles as described.  \n\nThe change can be reviewed by the below by comparing the [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-183/results_deployment_sorted.md) file to the source of truth,  which should match the order found in the source of truth for actionIds on the [balancer-v2-monorepo](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/action-ids).\n\nThe overview table can be consulted on the Balancer forum (based on the snapshot character limit)",
        "end_utc": "2023-04-24T18:00:00Z",
        "similarity_score": 0.1424,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way",
            "Abstain"
          ],
          "scores": [
            3880425.88490397,
            0,
            0
          ],
          "scores_total": 3880425.88490397,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2023-04-24T18:00:00",
          "pre_tvl_avg": 1254338037.0,
          "post_tvl_avg": 1231374548.0,
          "abnormal_change": -1.8307,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.018307,
          "abnormal_change_pct": -1.8307
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2023-04-24T18:00:00",
          "pre_price_avg": 6.17468062,
          "post_price_avg": 6.15251094,
          "abnormal_change": -0.359,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.00359,
          "abnormal_change_pct": -0.359
        }
      }
    },
    {
      "proposal_id": "0xbfbc6796f9b9321b1340103718e494d469fa8aae4b6525eeaaa4c0cdf3c8b78b",
      "cleaned": {
        "proposal_id": "0xbfbc6796f9b9321b1340103718e494d469fa8aae4b6525eeaaa4c0cdf3c8b78b",
        "title": "[BIP-214] Enable Permissions for BatchRelayer v5",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "end_utc": "2023-03-20T19:00:00Z",
        "similarity_score": 0.1341,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 4772205.681772564,
        "margin_pct": 0.9999996159788636,
        "scores_total": 4772207.514401116,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 254,
        "total_votes": 254,
        "first_vote_at": "2023-03-16T19:28:33Z",
        "last_vote_at": "2023-03-20T17:52:50Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            780774.833693735,
            0.00378276699205965,
            0.8161339046953247
          ],
          [
            1229.4361054491574,
            0.00593011759465518,
            0.0
          ],
          [
            561997.9160825487,
            0.16059105602009363,
            0.0
          ],
          [
            3428204.3120247354,
            0.030056803054069464,
            0.0
          ]
        ],
        "spike_index": 0.581548,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 2e-05,
        "half_slope_diff": 35.971079
      },
      "raw": {
        "id": "0xbfbc6796f9b9321b1340103718e494d469fa8aae4b6525eeaaa4c0cdf3c8b78b",
        "title": "[BIP-214] Enable Permissions for BatchRelayer v5",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "body": "## [Payload PR - BIP-214](https://github.com/BalancerMaxis/multisig-ops/pull/110)\n\n## Background\nA new version of the primary relayer,  [BatchRelayer 5.0](https://github.com/balancer/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230314-batch-relayer-v5).\nDeployment of the fifth BalancerRelayer using BatchRelayerLibrary, for combining multiple operations (swaps, joins, etc.) in a single transaction.\n\nThis new version provides full support for all versions of Stable Pools: in particular, V2 and higher, which support proportional joins and exits. It also adds support for many new protocol wrappers: CompoundV2 (Midas), Euler, Gearbox, Silo, Tetu, and Yearn as well as other new protocols that use  a similar wrapper wrapper.\n\n## English Specification\n\nThe transaction details were generated by [this script](https://github.com/BalancerMaxis/multisig-ops/blob/main/tools/python/gen_add_permissions_payload.py) with inputs and outputs in [this directory](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-214)\n\nThe following files can be found both linked below and in the payload PR linked above:\n\n| Filename                                                                                                                             | Description of Contents                                                                                                              |\n|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------|\n| [inputs.json](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-214/inputs.json)                                   | The inputs to the script mapping functions and deployments to target addresses that can execute them.                                |\n| [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-214/results_address_sorted.md)       | The resulting changes printed in a table sorted by target chain and target address. (to easily understand permisisons granted)       |\n| [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-214/results_deployment_sorted.md) | The resulting changes printed in a table sorted by target chain and target deployment. (for verification against action ids)         |\n| [function_descriptions.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-214/function_descriptions.md)         | A table that describes what each function that is being granted privileged access to allows.                                         |                                                                                                                                             |\n| [`chainname`.json](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-214/)                                         | For each change with changes, a transaction builder json named after said chain exists to apply the changes described in the tables. |\n\n# Specification\n\nAs described in the payload json, the authorizer will be called to grant the roles as described.  \n\nThe change can be reviewed by the below by comparing the [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-183/results_deployment_sorted.md) file to the source of truth,  which should match the order found in the source of truth for actionIds on the [balancer-v2-monorepo](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/action-ids).\n\nFor record, the contents of [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-214/results_address_sorted.md) are printed here:\n\n\n\n| deployment     | chain    | function                                                                                                          | role                                                               | target          | target_address                             |\n|:---------------|:---------|:------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------|:----------------|:-------------------------------------------|\n| 20210418-vault | arbitrum | batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256) | 0x1282ab709b2b70070f829c46bc36f76b32ad4989fecb2fcb09a1b3ce00bbfc30 | BalancerRelayer | 0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5 |\n| 20210418-vault | arbitrum | exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0xc149e88b59429ded7f601ab52ecd62331cac006ae07c16543439ed138dcb8d34 | BalancerRelayer | 0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5 |\n| 20210418-vault | arbitrum | joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0x78ad1b68d148c070372f8643c4648efbb63c6a8a338f3c24714868e791367653 | BalancerRelayer | 0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5 |\n| 20210418-vault | arbitrum | manageUserBalance((uint8,address,uint256,address,address)[])                                                      | 0xeba777d811cd36c06d540d7ff2ed18ed042fd67bbf7c9afcf88c818c7ee6b498 | BalancerRelayer | 0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5 |\n| 20210418-vault | arbitrum | setRelayerApproval(address,address,bool)                                                                          | 0x0014a06d322ff07fcc02b12f93eb77bb76e28cdee4fc0670b9dec98d24bbfec8 | BalancerRelayer | 0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5 |\n| 20210418-vault | arbitrum | swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)                   | 0x7b8a1d293670124924a0f532213753b89db10bde737249d4540e9a03657d1aff | BalancerRelayer | 0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5 |\n| 20210418-vault | mainnet  | batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256) | 0x1282ab709b2b70070f829c46bc36f76b32ad4989fecb2fcb09a1b3ce00bbfc30 | BalancerRelayer | 0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA |\n| 20210418-vault | mainnet  | exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0xc149e88b59429ded7f601ab52ecd62331cac006ae07c16543439ed138dcb8d34 | BalancerRelayer | 0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA |\n| 20210418-vault | mainnet  | joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0x78ad1b68d148c070372f8643c4648efbb63c6a8a338f3c24714868e791367653 | BalancerRelayer | 0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA |\n| 20210418-vault | mainnet  | manageUserBalance((uint8,address,uint256,address,address)[])                                                      | 0xeba777d811cd36c06d540d7ff2ed18ed042fd67bbf7c9afcf88c818c7ee6b498 | BalancerRelayer | 0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA |\n| 20210418-vault | mainnet  | setRelayerApproval(address,address,bool)                                                                          | 0x0014a06d322ff07fcc02b12f93eb77bb76e28cdee4fc0670b9dec98d24bbfec8 | BalancerRelayer | 0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA |\n| 20210418-vault | mainnet  | swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)                   | 0x7b8a1d293670124924a0f532213753b89db10bde737249d4540e9a03657d1aff | BalancerRelayer | 0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA |\n| 20210418-vault | optimism | batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256) | 0x1282ab709b2b70070f829c46bc36f76b32ad4989fecb2fcb09a1b3ce00bbfc30 | BalancerRelayer | 0x1a58897Ab366082028ced3740900ecBD765Af738 |\n| 20210418-vault | optimism | exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0xc149e88b59429ded7f601ab52ecd62331cac006ae07c16543439ed138dcb8d34 | BalancerRelayer | 0x1a58897Ab366082028ced3740900ecBD765Af738 |\n| 20210418-vault | optimism | joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0x78ad1b68d148c070372f8643c4648efbb63c6a8a338f3c24714868e791367653 | BalancerRelayer | 0x1a58897Ab366082028ced3740900ecBD765Af738 |\n| 20210418-vault | optimism | manageUserBalance((uint8,address,uint256,address,address)[])                                                      | 0xeba777d811cd36c06d540d7ff2ed18ed042fd67bbf7c9afcf88c818c7ee6b498 | BalancerRelayer | 0x1a58897Ab366082028ced3740900ecBD765Af738 |\n| 20210418-vault | optimism | setRelayerApproval(address,address,bool)                                                                          | 0x0014a06d322ff07fcc02b12f93eb77bb76e28cdee4fc0670b9dec98d24bbfec8 | BalancerRelayer | 0x1a58897Ab366082028ced3740900ecBD765Af738 |\n| 20210418-vault | optimism | swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)                   | 0x7b8a1d293670124924a0f532213753b89db10bde737249d4540e9a03657d1aff | BalancerRelayer | 0x1a58897Ab366082028ced3740900ecBD765Af738 |\n| 20210418-vault | polygon  | batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256) | 0x1282ab709b2b70070f829c46bc36f76b32ad4989fecb2fcb09a1b3ce00bbfc30 | BalancerRelayer | 0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b |\n| 20210418-vault | polygon  | exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0xc149e88b59429ded7f601ab52ecd62331cac006ae07c16543439ed138dcb8d34 | BalancerRelayer | 0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b |\n| 20210418-vault | polygon  | joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))                                                | 0x78ad1b68d148c070372f8643c4648efbb63c6a8a338f3c24714868e791367653 | BalancerRelayer | 0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b |\n| 20210418-vault | polygon  | manageUserBalance((uint8,address,uint256,address,address)[])                                                      | 0xeba777d811cd36c06d540d7ff2ed18ed042fd67bbf7c9afcf88c818c7ee6b498 | BalancerRelayer | 0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b |\n| 20210418-vault | polygon  | setRelayerApproval(address,address,bool)                                                                          | 0x0014a06d322ff07fcc02b12f93eb77bb76e28cdee4fc0670b9dec98d24bbfec8 | BalancerRelayer | 0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b |\n| 20210418-vault | polygon  | swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)                   | 0x7b8a1d293670124924a0f532213753b89db10bde737249d4540e9a03657d1aff | BalancerRelayer | 0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b |\n## Risk Assessment\nThis BIP is routine operation for provisioning a contract deployment/Batch Relayer.  Users must also approve BatchRelayers before they have access.  More details can be found in the [Special Vault Permissions Context doc](../../docs/Authorizer/vault_permissions.md).  \n\n## References\n\n[Directory of Addresses used by script which generated the table and multsig payloads](https://github.com/BalancerMaxis/multisig-ops/blob/main/tools/python/brownie/helpers/addresses.py)",
        "end_utc": "2023-03-20T19:00:00Z",
        "similarity_score": 0.1341,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way",
            "Abstain"
          ],
          "scores": [
            4772206.497906468,
            0.20036074366087792,
            0.8161339046953247
          ],
          "scores_total": 4772207.514401116,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2023-03-20T19:00:00",
          "pre_tvl_avg": 1344179673.0,
          "post_tvl_avg": 1337603101.0,
          "abnormal_change": -0.4893,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.004893,
          "abnormal_change_pct": -0.4893
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2023-03-20T19:00:00",
          "pre_price_avg": 6.716938085,
          "post_price_avg": 6.803064225,
          "abnormal_change": 1.2822,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.012822,
          "abnormal_change_pct": 1.2822
        }
      }
    },
    {
      "proposal_id": "0xa8e7428382b9bb28ab3fe0ea805d46849a3316fb9b697aafaa1202c0d0bb6da7",
      "cleaned": {
        "proposal_id": "0xa8e7428382b9bb28ab3fe0ea805d46849a3316fb9b697aafaa1202c0d0bb6da7",
        "title": "[BIP-199] Enable PoolRecoveryHelper on v3 Pools",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "end_utc": "2023-02-27T19:00:00Z",
        "similarity_score": 0.1335,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 4084276.6830791654,
        "margin_pct": 0.9998549948235771,
        "scores_total": 4084869.0102306586,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 280,
        "total_votes": 280,
        "first_vote_at": "2023-02-23T19:16:23Z",
        "last_vote_at": "2023-02-27T16:44:03Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            674472.9415018714,
            0.6033946115053697
          ],
          [
            23912.229579373834,
            0.03776773656726907
          ],
          [
            264239.6475746263,
            0.0
          ],
          [
            3121948.0279990407,
            295.5224133985772
          ]
        ],
        "spike_index": 0.681688,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 1.5e-05,
        "half_slope_diff": 15.575804
      },
      "raw": {
        "id": "0xa8e7428382b9bb28ab3fe0ea805d46849a3316fb9b697aafaa1202c0d0bb6da7",
        "title": "[BIP-199] Enable PoolRecoveryHelper on v3 Pools",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "body": "## [Payload PR - BIP-199](https://github.com/BalancerMaxis/multisig-ops/pull/82)\n\n## Background\nThe poolRecoveryHelper is a smart contract, which allows permissionless calling of the enableRecoveryMode() call\nassuming that any of the rate providers used in a given pool are failing.  This allows anyone in the balancer or greater web3 community to\nput the pools into a state where bad rateProvider data does not create routing issues.  It also allows for permissionless\nautomation to be setup to look for problems and quickly react.\n\nMore details on RecoveryMode and the poolRecovery Manager can be found in the text of [BIP-121](https://forum.balancer.fi/t/bip-121-permission-granting-recovery-mode/4045) which originally introduced these concepts.\n\nThis BIP requests adding authoriation for the pool recovery manager to operate on the recently deployed [v3 Weighted Pool Factory](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230206-weighted-pool-v3) and the [v3 Composable Stable Pool Factory](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks//20230206-composable-stable-pool-v3) and all pools generated by them.\n## English Specification\n\nThe transaction details were generated by [this script](https://github.com/BalancerMaxis/multisig-ops/blob/main/tools/python/gen_add_permissions_payload.py) with inputs and outputs in [this directory](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-199)\n\nThe following files can be found both linked below and in the payload PR linked above:\n\n| Filename                                                                                                                             | Description of Contents                                                                                                              |\n|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------|\n| [inputs.json](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-199/inputs.json)                                   | The inputs to the script mapping functions and deployments to target addresses that can execute them.                                |\n| [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-199/results_address_sorted.md)       | The resulting changes printed in a table sorted by target chain and target address. (to easily understand permisisons granted)       |\n| [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-199/results_deployment_sorted.md) | The resulting changes printed in a table sorted by target chain and target deployment. (for verification against action ids)         |\n| [function_descriptions.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-199/function_descriptions.md)         | A table that describes what each function that is being granted privileged access to allows.                                         |                                                                                                                                             |\n| [`chainname`.json](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-199/)                                         | For each change with changes, a transaction builder json named after said chain exists to apply the changes described in the tables. |\n\nIn the tables above:\n\nThe \"poolRecoveryHelper\" caller group:\n - maps to the deployed [poolRecoveryHelper contract](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20221123-pool-recovery-helper)\n\n\n# Specification\n\nAs described in the payload json, the authorizer will be called to grant the roles as described.  \n\nThe change can be reviewed by the below by comparing the [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-183/results_deployment_sorted.md) file to the source of truth,  which should match the order found in the source of truth for actionIds on the [balancer-v2-monorepo](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/action-ids).\n\nFor record, the contents of [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-199/results_address_sorted.md) are printed here:\n\n\n\n| deployment                         | chain    | function             | role                                                               | target             | target_address                             |\n|:-----------------------------------|:---------|:---------------------|:-------------------------------------------------------------------|:-------------------|:-------------------------------------------|\n| 20230206-weighted-pool-v3          | arbitrum | enableRecoveryMode() | 0x1e3379f440ccd8ad4fbacfa446ce3de718eda1a091b271c9053bdedff90cdf1c | poolRecoveryHelper | 0xb5e56CC3d2e38e53b1166175C59e921A37cDC1E2 |\n| 20230206-composable-stable-pool-v3 | arbitrum | enableRecoveryMode() | 0xe6321aecff7f0051958627890aa2a16d7221f860dfa3359a1cea6f4a3f87933e | poolRecoveryHelper | 0xb5e56CC3d2e38e53b1166175C59e921A37cDC1E2 |\n| 20230206-weighted-pool-v3          | gnosis   | enableRecoveryMode() | 0x2e31b466b15801536da90012c6e9916b3e0587c2d0b7c63328971c531b6ccf87 | poolRecoveryHelper | 0xc3ccacE87f6d3A81724075ADcb5ddd85a8A1bB68 |\n| 20230206-composable-stable-pool-v3 | gnosis   | enableRecoveryMode() | 0xd6f4df0a512a29fa4cf2fcfbe4a0b5ea1266a4bbb1ab6fb5761205dbb038441f | poolRecoveryHelper | 0xc3ccacE87f6d3A81724075ADcb5ddd85a8A1bB68 |\n| 20230206-weighted-pool-v3          | mainnet  | enableRecoveryMode() | 0xa53ffba9aa2195cd7646f9cbaca0985f432bded3dd5319916afc5ec395f280d7 | poolRecoveryHelper | 0x1b300C86980a5195bCF49bD419A068D98dC133Db |\n| 20230206-composable-stable-pool-v3 | mainnet  | enableRecoveryMode() | 0x8c91ddec262ae544d56464e260d0b840239949d86149c139510d5e399a30099f | poolRecoveryHelper | 0x1b300C86980a5195bCF49bD419A068D98dC133Db |\n| 20230206-weighted-pool-v3          | optimism | enableRecoveryMode() | 0x076ec7596fb2fd56057ab4b4ab843852ee914ca3095f9cdf46a79085b266a748 | poolRecoveryHelper | 0x26743984e3357eFC59f2fd6C1aFDC310335a61c9 |\n| 20230206-composable-stable-pool-v3 | optimism | enableRecoveryMode() | 0xa7508bde3c3d65fa21321ca35b2d1da564bc4a772cff9947de3c3e1a467e9dec | poolRecoveryHelper | 0x26743984e3357eFC59f2fd6C1aFDC310335a61c9 |\n| 20230206-weighted-pool-v3          | polygon  | enableRecoveryMode() | 0x8e751c9d2a2e4de88b6c71094d5a2b18be451801333ea94579761179bc9b9ef9 | poolRecoveryHelper | 0x495F696430F4A51F7fcB98FbE68a9Cb7A07fB1bA |\n| 20230206-composable-stable-pool-v3 | polygon  | enableRecoveryMode() | 0x4645b2fd612d1e3d4f7cbd5f68df6511f4dedfcba83090853604d4fbf33f467d | poolRecoveryHelper | 0x495F696430F4A51F7fcB98FbE68a9Cb7A07fB1bA |\n## Risk Assessment\nThis BIP is about allowing automation and the greater Web3 community to move pools into a state where there is less risk,\nin situations where there could be some concern about their function.  A number of higher AUM V2 pools spent quite a bit\nof time in Recovery Mode recently as a result of some recently discovered and patched [reentrency issues](https://forum.balancer.fi/t/reentrancy-vulnerability-scope-expanded/4345).\nIt has been well demonstrated that, while recoveryMode can create some minor UX problems for exiting pools and results in less revenue being earned by the DAO, it otherwise has no ill-effects nor creates new risk.\n\n## References\n\n[Directory of Addresses used by script which generated the table and multsig payloads](https://github.com/BalancerMaxis/multisig-ops/blob/main/tools/python/brownie/helpers/addresses.py)",
        "end_utc": "2023-02-27T19:00:00Z",
        "similarity_score": 0.1335,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way"
          ],
          "scores": [
            4084572.846654912,
            296.1635757466499
          ],
          "scores_total": 4084869.0102306586,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2023-02-27T19:00:00",
          "pre_tvl_avg": 1236492726.5,
          "post_tvl_avg": 1264910815.0,
          "abnormal_change": 2.2983,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.022983,
          "abnormal_change_pct": 2.2983
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2023-02-27T19:00:00",
          "pre_price_avg": 7.03785868,
          "post_price_avg": 7.0906663949999995,
          "abnormal_change": 0.7503,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.007503,
          "abnormal_change_pct": 0.7503
        }
      }
    }
  ],
  "semantic_references": [],
  "decision": {
    "snapshot_url": "https://snapshot.org/#/balancer.eth/proposal/0x2636e7a6e91a30fa584560371f733b80d8f11973e97c9bb27409210bc5db9854",
    "selected_choice_label": "Yes, let's do it",
    "selected_choice_index": 0,
    "confidence": 0.95,
    "summary": "Proposal to initialize the Balancer Contract Registry with trusted factories, routers, hooks, and ERC4626 tokens for on-chain and off-chain trust and convenience. Strong voting support and positive forum sentiment endorse adoption.",
    "key_arguments_for": [
      "Provides a trusted on-chain registry to verify official Balancer contracts, enhancing security and preventing spoofing.",
      "Enables off-chain queries and simplifies discovery of latest Balancer contracts for integrations.",
      "Strong voting timeline shows unanimous and stable support for the proposal.",
      "Forum discussion expresses positive sentiment supporting this infrastructure upgrade."
    ],
    "key_arguments_against": [
      "No significant opposition or negative forum sentiment detected.",
      "Some forum comments neutral, indicating need for clear communication post-implementation."
    ],
    "evidence": [
      {
        "source_tool": "forums_fetch_discussion",
        "reference": "https://forum.balancer.fi/t/bip-805-balancer-registry-initialization/6430",
        "quote": "In full support of this infrastructure upgrade"
      },
      {
        "source_tool": "timeline_analyze_timeline",
        "reference": null,
        "quote": "Voting timeline shows unanimous early and sustained support for 'Yes, let's do it' option."
      },
      {
        "source_tool": "govnews_proposal_news_window",
        "reference": null,
        "quote": "Adjacent proposals [BIP-797], [BIP-796] had similar unanimous support and positive market reactions."
      }
    ],
    "available_choices": [
      "Yes, let's do it",
      "No, this is not the way",
      "Abstain"
    ],
    "event_start_utc": "2025-03-20T19:00:00Z",
    "event_end_utc": "2025-03-24T19:00:00Z",
    "event_time_utc": "2025-03-24T19:00:00Z",
    "address_of_governance_token": "0x10A19e7eE7d7F8a52822f6817de8ea18204F2e4f",
    "token_price_impact_pct": 2.8874,
    "tvl_impact_pct": 1.7511,
    "actual_vote_result": {
      "winner_label": "Yes, let's do it",
      "winner_index": 0,
      "scores": [
        2914507.473907357,
        0.0,
        0.0
      ],
      "scores_total": 2914507.473907357,
      "margin_abs": 2914507.473907357,
      "margin_pct": 1.0
    },
    "simulation_reason": "Recommendation based on timeline analysis, forum sentiment, and historical adjacent proposal patterns.",
    "references": null,
    "decision_stance": "Change",
    "ai_final_conclusion": "Option 'Yes, let's do it' selected with stance to keep 'Change'.",
    "ai_final_reason": "- Unanimous and stable voting support throughout the proposal timeline strongly favors adoption.\n- Forum sentiment is aligned with the recommendation, expressing positive support for the infrastructure upgrade.\n- Historical adjacent proposals with similar technical upgrades also succeeded with unanimous support and positive market reception.\n- The proposal enhances security by providing an on-chain trusted registry and improves off-chain usability, benefiting the Balancer ecosystem.\n- Sentiment and vote alignment indicate the recommendation mirrors community views, reinforcing the decision.\n",
    "similar_proposals": [
      {
        "proposal_id": "0xb7dc73580560446a20adc7bf79bce1d52a1ab32aee6154fce0441eea51307eb0",
        "title": "[BIP-797] Wire Up V3 Protocol Fee Processing Permissions",
        "end_utc": "2025-03-17T19:00:00Z",
        "summary": "[BIP-797] Wire Up V3 Protocol Fee Processing Permissions closed on 2025-03-17T19:00:00Z. Timeline analytics noted 3 unique voters, timeline-only analysis (no final tally), recommended option index 0.",
        "similarity_reason": "Related text overlap (score 0.12)",
        "market_response": "token +3.57%; TVL +1.88%",
        "change_stance": "To change"
      },
      {
        "proposal_id": "0x5b8e3661ceaba538d7a4b15ec985a173185d7171e97b136668d9ebca1dc91340",
        "title": "[BIP-796] Enable orbETH/waArbWETH Gauge [Arbitrum]",
        "end_utc": "2025-03-17T19:00:00Z",
        "summary": "[BIP-796] Enable orbETH/waArbWETH Gauge [Arbitrum] closed on 2025-03-17T19:00:00Z. Timeline analytics noted 3 unique voters, timeline-only analysis (no final tally), recommended option index 0.",
        "similarity_reason": "Related text overlap (score 0.11)",
        "market_response": "token +3.57%; TVL +1.88%",
        "change_stance": "To change"
      }
    ],
    "ex_post_price_impact_pct": 2.8874,
    "ex_post_tvl_impact_pct": 1.7511,
    "ex_post_window": "3d pre / 3d post around event end",
    "ex_post_note": "Token price +2.89%; TVL +1.75%"
  },
  "agentic_ai_choice": "Yes, let's do it",
  "actual_outcome": "Yes, let's do it",
  "match_result": "same",
  "forum_sentiment_summary": {
    "Negative": 0,
    "Positive": 1,
    "Neutral": 2,
    "total_comments": 3
  }
}