{
  "captured_at_utc": "2025-10-09T00:39:33.647211+00:00",
  "snapshot_url": "https://snapshot.org/#/balancer.eth/proposal/0x3b09eeb26d102d4b30da56094f4bb9ab772242ccfab52b9eb03ca82eec32c343",
  "focus": null,
  "votes_count": 9,
  "timeline_metrics_current": {
    "unique_voters": 9,
    "total_votes": 9,
    "first_vote_at": "2024-08-30T03:34:06Z",
    "last_vote_at": "2024-09-02T17:16:13Z",
    "series_step_hours": 6.0,
    "summary": "timeline-only analysis (no final tally)",
    "recommended_index": 0,
    "lead_ratio_by_quartile": [
      [
        1.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0
      ],
      [
        1.0,
        0.0,
        0.0
      ],
      [
        1.0,
        0.0,
        0.0
      ]
    ],
    "lead_ratio_total": [
      1.0,
      0.0,
      0.0
    ],
    "stability": [
      1.0,
      0.0,
      0.0
    ],
    "early_ratio": [
      1.0,
      0.0,
      0.0
    ],
    "vp_by_quartile": [
      [
        1153.2316052229796,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0
      ],
      [
        201436.0847530141,
        0.0,
        0.0
      ],
      [
        2364225.5768144606,
        0.0,
        0.0
      ]
    ],
    "spike_index": 0.921074,
    "spike_follow_support_ratio": 1.0,
    "stairwise_ratio": 0.078926,
    "half_slope_diff": 10.223809
  },
  "adjacent_analytics": [
    {
      "id": "0x006cb62f6cbdd7645a6587aa1837f6a4327d999acf2cf1c1c4e3839735ba5c30",
      "title": "[BIP-684] Enable Gauge for sdeUSD / deUSD ECLP [Ethereum]",
      "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
      "end_utc": "2024-08-26T18:00:00Z",
      "timeline_metrics": {
        "unique_voters": 9,
        "total_votes": 9,
        "first_vote_at": "2024-08-23T03:08:17Z",
        "last_vote_at": "2024-08-26T07:36:01Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            0.27086961841803914,
            0.0,
            0.0
          ],
          [
            0.20018360952893866,
            0.0,
            0.0
          ],
          [
            209282.9915217259,
            0.0,
            624.440158260502
          ],
          [
            2300984.358642127,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.916629,
        "spike_follow_support_ratio": 0.0,
        "stairwise_ratio": 0.083371,
        "half_slope_diff": 94.538284
      },
      "price_impact_pct": -10.4063,
      "tvl_impact_pct": -10.2023,
      "similarity": 0.0838,
      "actual_vote_result": {
        "winner_index": 0,
        "winner_label": "Yes, let's do it",
        "margin_abs": 2509183.1842174847,
        "scores_total": 2510892.2613753416,
        "margin_pct": 0.9993193347304672
      }
    },
    {
      "id": "0x81d5e131b723ae045203c9a8b711660d1e1c9743e0d9c8a56ea012d7ee06a75f",
      "title": "[BIP-683] Enable gauge for aGHO/USDe E-CLP [Arbitrum]",
      "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
      "end_utc": "2024-08-26T18:00:00Z",
      "timeline_metrics": {
        "unique_voters": 9,
        "total_votes": 9,
        "first_vote_at": "2024-08-23T03:08:00Z",
        "last_vote_at": "2024-08-26T07:36:01Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            0.4228379861472811,
            0.0,
            0.0
          ],
          [
            0.0038662893031446207,
            0.0,
            0.0
          ],
          [
            209908.88931806327,
            0.0,
            0.0
          ],
          [
            2300984.2066793023,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.916401,
        "spike_follow_support_ratio": 0.0,
        "stairwise_ratio": 0.083599,
        "half_slope_diff": 10.464422
      },
      "price_impact_pct": -10.4063,
      "tvl_impact_pct": -10.2023,
      "similarity": 0.1134,
      "actual_vote_result": {
        "winner_index": 0,
        "winner_label": "Yes, let's do it",
        "margin_abs": 2510893.5227016406,
        "scores_total": 2510893.5227016406,
        "margin_pct": 1.0
      }
    },
    {
      "id": "0x665666c67ce74dd1be667101dd37e3f0b42304e1b3efd9b800da3f964cc8178d",
      "title": "[BIP-682] Enable sUSDe/GYD E-CLP gauge [Ethereum]",
      "author": "0x7019Be4E4eB74cA5F61224FeAf687d2b43998516",
      "end_utc": "2024-08-26T18:00:00Z",
      "timeline_metrics": {
        "unique_voters": 8,
        "total_votes": 8,
        "first_vote_at": "2024-08-23T03:07:41Z",
        "last_vote_at": "2024-08-26T07:36:01Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            0.4228496270318516,
            0.0,
            0.0
          ],
          [
            0.002699039884316904,
            0.0,
            0.0
          ],
          [
            209911.95035802465,
            0.0,
            0.0
          ],
          [
            2300984.2066793023,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.916399,
        "spike_follow_support_ratio": 0.0,
        "stairwise_ratio": 0.083601,
        "half_slope_diff": 10.818914
      },
      "price_impact_pct": -10.4063,
      "tvl_impact_pct": -10.2023,
      "similarity": 0.1107,
      "actual_vote_result": {
        "winner_index": 0,
        "winner_label": "Yes, let's do it",
        "margin_abs": 2510436.385744658,
        "scores_total": 2510896.5825859937,
        "margin_pct": 0.9998167201132346
      }
    }
  ],
  "similar_proposals_data": [
    {
      "proposal_id": "0xe1e42fd73a2d734d78a65e514a6996c785e90bc82a2e896825dd4af003aeec15",
      "cleaned": {
        "proposal_id": "0xe1e42fd73a2d734d78a65e514a6996c785e90bc82a2e896825dd4af003aeec15",
        "title": "[BIP-29] Introduce GaugeAdder v2",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "end_utc": "2022-07-24T17:15:00Z",
        "similarity_score": 0.1643,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 1352403.2625107144,
        "margin_pct": 1.0,
        "scores_total": 1352403.2625107144,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 129,
        "total_votes": 129,
        "first_vote_at": "2022-07-21T17:28:24Z",
        "last_vote_at": "2022-07-24T13:14:47Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            268346.395628494,
            0.0
          ],
          [
            793428.482775206,
            0.0
          ],
          [
            166913.02464082447,
            0.0
          ],
          [
            123715.35946618936,
            0.0
          ]
        ],
        "spike_index": 0.379245,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 0.082225,
        "half_slope_diff": 11.593806
      },
      "raw": {
        "id": "0xe1e42fd73a2d734d78a65e514a6996c785e90bc82a2e896825dd4af003aeec15",
        "title": "[BIP-29] Introduce GaugeAdder v2",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "body": "## Motivation\n\nThe [GaugeAdder](https://etherscan.io/address/0xEd5ba579bB5D516263ff6E1C10fcAc1040075Fe2) is a piece of veBAL infrastructure that securely streamlines the process of adding new gauges to the system. It includes checks that ensure only gauges deployed from the official gauge factories can be added to the veBAL system and become eligible for BAL emissions. As we prepare to add gauges from new networks the `GaugeAdder` must be upgraded to support this expansion. To facilitate this upgrade a coordinator contract has been deployed by the smart contracts team at Balancer Labs. The coordinator does the following:\n\n* Grant permission to the Balancer Labs Ops Multisig (the one that triggers the weekly BAL minting and bridging every Thursday) to control the parameters of the Arbitrum and Optimism bridge, which are required to operate them (e.g. their gas limit)\n* It creates a new gauge type called ‘Optimism’ on the `GaugeController`\n* It revokes permission to add gauges from the old `GaugeAdder`\n* It grants permission to add gauges to the `GaugeAdder v2` and grants permission to the LM Multisig `0xc38c5f97B34E175FFd35407fc91a937300E33860` (controlled by Balancer Maxis) to add governance approved Ethereum, Polygon, Arbitrum, and Optimism gauges.\n* It ports the old Ethereum, Polygon, and Arbitrum gauge factories from the old `GaugeAdder` to the new one and adds the new Optimism gauge factory\n\nThe `GaugeAdder v2` also has support for zksync and gnosis gauges but those types are not yet created nor do gauge factories exist.\n\n## Specification\n\nIf approved, the DAO Multisig `0x10A19e7eE7d7F8a52822f6817de8ea18204F2e4f` will initiate a transaction to interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `grantRole` with the following arguments:\n\nrole: `0x0000000000000000000000000000000000000000000000000000000000000000`\n\naddress: `0x1B57f637Ce3408f1f834b0b70f9A595b062DAea7`\n\nThis can be verified [here](https://github.com/balancer-labs/balancer-v2-monorepo/blob/b61121f4d8188a783153ec9d94554e2fb5708d56/pkg/deployments/tasks/scripts/20220721-gauge-adder-migration-coordinator/output/mainnet.json#L2).",
        "end_utc": "2022-07-24T17:15:00Z",
        "similarity_score": 0.1643,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way"
          ],
          "scores": [
            1352403.2625107144,
            0
          ],
          "scores_total": 1352403.2625107144,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2022-07-24T17:15:00",
          "pre_tvl_avg": 755062943.5,
          "post_tvl_avg": 699371458.0,
          "abnormal_change": -7.3757,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.073757,
          "abnormal_change_pct": -7.3757
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2022-07-24T17:15:00",
          "pre_price_avg": 5.4687402249999995,
          "post_price_avg": 5.526165345000001,
          "abnormal_change": 1.0501,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.010501,
          "abnormal_change_pct": 1.0501
        }
      }
    },
    {
      "proposal_id": "0x1420cd61a3d5f4e24320dd209efd088e3ec5c4ca178957de972f16baa8b66702",
      "cleaned": {
        "proposal_id": "0x1420cd61a3d5f4e24320dd209efd088e3ec5c4ca178957de972f16baa8b66702",
        "title": "[BIP-207] Grant Balancer Maxis the authorisation to register protocolIds for LinearPools",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "end_utc": "2023-03-13T19:00:00Z",
        "similarity_score": 0.1605,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 3979993.484990678,
        "margin_pct": 0.9999990295481853,
        "scores_total": 3979997.347386326,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 354,
        "total_votes": 354,
        "first_vote_at": "2023-03-09T19:41:55Z",
        "last_vote_at": "2023-03-13T18:58:43Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            2808232.659891459,
            0.25422067839499685,
            0.0
          ],
          [
            581458.8430389414,
            0.7402845472302861,
            0.44109081521140514
          ],
          [
            535581.9800262346,
            0.4154975386555592,
            0.11842496291777208
          ],
          [
            54721.412036805974,
            0.0,
            0.4828743417937106
          ]
        ],
        "spike_index": 0.69074,
        "spike_follow_support_ratio": 0.999999,
        "stairwise_ratio": 1.7e-05,
        "half_slope_diff": -160.111348
      },
      "raw": {
        "id": "0x1420cd61a3d5f4e24320dd209efd088e3ec5c4ca178957de972f16baa8b66702",
        "title": "[BIP-207] Grant Balancer Maxis the authorisation to register protocolIds for LinearPools",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "body": "## PR\nhttps://github.com/BalancerMaxis/multisig-ops/pull/101\n\n\n\n\n## Background\n\nBalancer’s boosted pools have seen great adoption over the recent year. In order to expand the Boosted Pools product to more protocols in addition to Aave, a Linear Pool registration process needs to be established so that LP’s and Swappers can experience great UX during the user flow.\n\nOne typical example of a boosted pool is the inclusion of a Balancer Pool Token (BPT) in the Form of a Linear Pool. Each Linear Pool is being deployed from the respective ProtocolLinearPoolFactory. One and the same LinearPoolFactory can however be used to create Linear Pools for multiple different protocols, if they are for example forks. During the [creation](https://etherscan.io/address/0x5F43FBa61f63Fa6bFF101a0A0458cEA917f6B347#writeContract#F1) of a Linear Pool, a protocolId parameter needs to be passed. Let’s look at some examples.\n\n* Create a (Aaave protocol) DAI-aDAI Linear Pool - deployed from the AaveLinearPoolFactory - pass 1 as an example protocolId parameter.\n* Create a (Aave protocol) USDC-aUSDC Linear Pool - deployed from the AaveLinearPoolFactory - pass 1 as an example protocolID parameter.\n* Create a (Sturdy protocol) Dai-sDAI Linear Pool - deployed from the AaveLinearPoolFactory - pass 13 as an example protocolId parameter.\n* Create a (Euler protocol) USDC-eUSDC Linear Pool - deployed from the EulerLinearPoolFactory - pass 5 as an example protocolId parameter.\n\nCreating a boosted pool is permissionless. Therefore a process to register protocols is required to allow data-consumers to distinguish which pool belongs to which protocol, even if the pool has been created from the same factory.\n\n## Dependencies\n\nOnly authorized accounts can register a protocolId. Orb collective proposes to have this be handled by the Balancer Maxis.\n\nIn order for this to happen, a Balancer Maxis account needs to be granted the permission to call the function `registerProtocolId(uint256,string)` and `renameProtocolId(uint256,string)`, which requires a previously granted authorisation. For this an interaction with the [Authoriser](https://etherscan.io/address/0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6) contract is necessary. Once this has been done, the Balancer Maxis account can call `registerProtocolId()` and `renameProtocolId ` on a global protocolID registry contract. This contract is deployed on the following networks:\n\n|chain|address|\n|---|---|\n|mainnet| 0xc3ccacE87f6d3A81724075ADcb5ddd85a8A1bB68 |\n|  polygon | 0xa523f47A933D5020b23629dDf689695AA94612Dc |\n|  arbitrum | 0x5cF4928a3205728bd12830E1840F7DB85c62a4B9 |\n|  optimism | 0x9805dcfD25e6De36bad8fe9D3Fe2c9b44B764102 |\n|  gnosis | 0x6B5dA774890Db7B7b96C6f44e6a4b0F657399E2e |\n|  goerli | 0x4fb47126Fa83A8734991E41B942Ac29A3266C968 |\n\n\n\n\n\nThe protocolIDs registered by the Balancer Maxis shall be unique.\n\n## Specification\n\n1. As per the linked payload, The DAO multisig in each network will initiate transactions with the Authorizer 0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6 and call `grantRole` providing the address of `LM Multisig` on a given chain as the account, and the list of the ActionIDs per chain in the table below as roles.\n\n\n2. Once a new protocolId registration is required, the Balancer Maxis activate the `LM Multisig` to call registerProtocolId() on the ProtocolIdRegistry with a protocolId parameter and name.  The protocolId and Name will be determined in collaboration with Orb and the  original change requestor.\n\n3.  A protocol looking to get its protocolId registered should engage with the Balancer Maxis or Orb Collective to determine what the appropriate protocolId and name to be registered is and action the on-chain change.\n\n\n\n\n|deployment|chain|function|role|target|target_address|\n|---|---|---|---|---|---|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|arbitrum|registerProtocolId(uint256,string)|0xfed0eb6041728fc141bad70d04446ff0e9c8289a4f53cc060addc832c914b44f|BalancerMaxis|0xc38c5f97B34E175FFd35407fc91a937300E33860|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|arbitrum|renameProtocolId(uint256,string)| 0xdc8681b640b547e98ee6f4d708df559b807526d976644c3aca24bc12c4f839c3 |BalancerMaxis|0xc38c5f97B34E175FFd35407fc91a937300E33860|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|gnosis|registerProtocolId(uint256,string)| 0x0ed00e8835e2d2867dcdf863354062a805ff3fe1dabf44c0b68378c84c52616e |BalancerMaxis| 0x14969B55a675d13a1700F71A37511bc22D90155a |\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|gnosis|renameProtocolId(uint256,string)| 0xfb760772d39ec169b9e7cd49bccd8858c635114d103dea72a7a694d094e8930c |BalancerMaxis| 0x14969B55a675d13a1700F71A37511bc22D90155a |\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|mainnet|registerProtocolId(uint256,string)| 0x09a880cf3d54a213316bf4d92d60e72ba0ab61a639fce84378eefb9a63d6abd5 |BalancerMaxis|0xc38c5f97B34E175FFd35407fc91a937300E33860|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|mainnet|renameProtocolId(uint256,string)| 0x4f3dee5b767f91b4faa9979f01808dd2490fde931a9eb355d5f8e0187826dade |BalancerMaxis|0xc38c5f97B34E175FFd35407fc91a937300E33860|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|optimism|registerProtocolId(uint256,string)| 0x176a1b54ac0ba4509b1a508223c85146627bbe203b18b2beaa28b6992b3b021d |BalancerMaxis|0x09Df1626110803C7b3b07085Ef1E053494155089|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|optimism|renameProtocolId(uint256,string)| 0x8630bf555a7a5baabd493fc2afc07b7baa6ea598eaea016acd0d926a6a6962fa |BalancerMaxis|0x09Df1626110803C7b3b07085Ef1E053494155089|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|polygon|registerProtocolId(uint256,string)| 0x8f64bed4b4e908316d1d51abae6d2ca2c0f6ac132d219882be578341027b587b |BalancerMaxis|0xc38c5f97B34E175FFd35407fc91a937300E33860|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|polygon|renameProtocolId(uint256,string)| 0x5dd6754fa5d8d56f6177c0265c35ab00ee57aa8a190975f1fba56a18796f0aeb |BalancerMaxis|0xc38c5f97B34E175FFd35407fc91a937300E33860| \n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|goerli|registerProtocolId(uint256,string)| 0xdfc349d88d311b76af85f0bdc6a81be0e30485d488472e3813359f8e26fc1c95 |BalancerMaxis|0x3bAbEBfD684506A5B47701ee231A53427Ad413Ef|\n| [20230223-protocol-id-registry](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/tasks/20230223-protocol-id-registry)|goerli|renameProtocolId(uint256,string)| 0x397a10db2c15733cdb7c0fad6226786d83e216ed46c740257186765f4018bec5 |BalancerMaxis|0x3bAbEBfD684506A5B47701ee231A53427Ad413Ef|\n\n\nGoing forward, whenever a protocol seeks to get its protocolId registered, Orb Collective and Balancer Maxis will coordinate with the respective protocol to ensure a proper registration process.  The Balancer Maxis are mandated by this BIP to make necessary on-chain changes to the registry at the instructions of the Orb collective without individual veBAL governance around each change.",
        "end_utc": "2023-03-13T19:00:00Z",
        "similarity_score": 0.1605,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way",
            "Abstain"
          ],
          "scores": [
            3979994.894993442,
            1.410002764280842,
            1.0423901199228878
          ],
          "scores_total": 3979997.347386326,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2023-03-13T19:00:00",
          "pre_tvl_avg": 1171303634.0,
          "post_tvl_avg": 1269104926.0,
          "abnormal_change": 8.3498,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.083498,
          "abnormal_change_pct": 8.3498
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2023-03-13T19:00:00",
          "pre_price_avg": 6.10811657,
          "post_price_avg": 6.322721785,
          "abnormal_change": 3.5134,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.035134,
          "abnormal_change_pct": 3.5134
        }
      }
    },
    {
      "proposal_id": "0xf41eb9ef46d110eaee8ce65e895fd16ac9c72153fb42c841a1210fec95444511",
      "cleaned": {
        "proposal_id": "0xf41eb9ef46d110eaee8ce65e895fd16ac9c72153fb42c841a1210fec95444511",
        "title": "[BIP-276] Enable new L2 gauges",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "end_utc": "2023-05-08T18:00:00Z",
        "similarity_score": 0.1522,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 3360214.3537033587,
        "margin_pct": 0.9999993804790566,
        "scores_total": 3360216.4354278147,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 156,
        "total_votes": 156,
        "first_vote_at": "2023-05-04T18:09:35Z",
        "last_vote_at": "2023-05-08T17:37:08Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            0.981132,
            0.018868,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          0.9935897435897436,
          0.00641025641025641,
          0.0
        ],
        "stability": [
          0.9935897435897436,
          0.00641025641025641,
          0.0
        ],
        "early_ratio": [
          0.9811320754716981,
          0.018867924528301886,
          0.0
        ],
        "vp_by_quartile": [
          [
            6893.72628201393,
            0.16967942902709807,
            0.9050014689780577
          ],
          [
            113.94760053338769,
            0.0,
            0.0
          ],
          [
            236671.73532995398,
            0.10204208884147208,
            0.0
          ],
          [
            3116535.8494923264,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.889019,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 1.3e-05,
        "half_slope_diff": 41.247453
      },
      "raw": {
        "id": "0xf41eb9ef46d110eaee8ce65e895fd16ac9c72153fb42c841a1210fec95444511",
        "title": "[BIP-276] Enable new L2 gauges",
        "author": "0x9f74662aD05840Ba35d111930501c617920dD68e",
        "body": "### [PR with Payload](https://github.com/BalancerMaxis/multisig-ops/pull/162)\n\n### Motivation\n\nBalancer contributors recently completed development on new non-ethereum (\"L2\") gauges which feature the ability to have cross chain reward boosts via Layer Zero. In order for these new gauges to function properly each child chain factory on L2 must be added to the pseudo minter on that network. If this is not done then BAL emissions cannot flow through the new gauges.\n\n\n### Specification\n\n\n### Arbitrum\n#1\nThe DAO Multisig on Arbitrum `arb1:0xaF23DC5983230E9eEAf93280e312e57539D098D0` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `grantRole` with the following arguments:\n\nrole: `0x57f5e3be3930b0a9235265a5237eb44d5ec61fe36999757360b72280c4dcd991`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/arbitrum/action-ids.json#L593).\n\naccount: `0xaF23DC5983230E9eEAf93280e312e57539D098D0`\n\nwhich corresponds to the address for the DAO Multisig. This allows the DAO Multisig to call `addGaugeFactory` on the pseudo minter.\n\n#2\nThe DAO Multisig on Arbitrum `arb1:0xaF23DC5983230E9eEAf93280e312e57539D098D0` will interact with the pseudo minter `0xc3ccacE87f6d3A81724075ADcb5ddd85a8A1bB68` calling `addGaugeFactory` with the following argument:\n\nfactory: `0x6817149cb753BF529565B4D023d7507eD2ff4Bc0`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/tasks/20230316-child-chain-gauge-factory-v2/output/arbitrum.json).\n\nThis adds the child chain factory to the pseudo minter.\n\n#3\nThe DAO Multisig on Arbitrum `arb1:0xaF23DC5983230E9eEAf93280e312e57539D098D0` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `renounceRole` with the following arguments:\n\nrole: `0x57f5e3be3930b0a9235265a5237eb44d5ec61fe36999757360b72280c4dcd991`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/arbitrum/action-ids.json#L593).\n\naccount: `0xaF23DC5983230E9eEAf93280e312e57539D098D0`\n\nwhich corresponds to the address for the DAO Multisig. This removes the role added above.\n\n\n### Polygon\n#1\nThe DAO Multisig on Polygon `matic:0xeE071f4B516F69a1603dA393CdE8e76C40E5Be85` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `grantRole` with the following arguments:\n\nrole: `0x71b144ace6b2cd2762fedff00a9e45c9b7b742ee590f9d593c61e48b6c9ad790`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/polygon/action-ids.json#L646).\n\naccount: `0xeE071f4B516F69a1603dA393CdE8e76C40E5Be85`\n\nwhich corresponds to the address for the DAO Multisig. This allows the DAO Multisig to call `addGaugeFactory` on the pseudo minter.\n\n#2\nThe DAO Multisig on Polygon `matic:0xeE071f4B516F69a1603dA393CdE8e76C40E5Be85` will interact with the pseudo minter `0x47B489bf5836f83ABD928C316F8e39bC0587B020` calling `addGaugeFactory` with the following argument:\n\nfactory: `0x22625eEDd92c81a219A83e1dc48f88d54786B017`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/tasks/20230316-child-chain-gauge-factory-v2/output/polygon.json).\n\nThis adds the child chain factory to the pseudo minter.\n\n#3\nThe DAO Multisig on Polygon `matic:0xeE071f4B516F69a1603dA393CdE8e76C40E5Be85` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `renounceRole` with the following arguments:\n\nrole: `0x71b144ace6b2cd2762fedff00a9e45c9b7b742ee590f9d593c61e48b6c9ad790`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/polygon/action-ids.json#L646).\n\naccount: `0xeE071f4B516F69a1603dA393CdE8e76C40E5Be85`\n\nwhich corresponds to the address for the DAO Multisig. This removes the role added above.\n\n\n### Gnosis\n#1\nThe DAO Multisig on Gnosis `gno:0x2a5AEcE0bb9EfFD7608213AE1745873385515c18` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `grantRole` with the following arguments:\n\nrole: `0xff178bcb549aae01d4613b3ca6c16f1fa42e808cd1bddd210756b3878cfa9268`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/gnosis/action-ids.json#L646).\n\naccount: `0x2a5AEcE0bb9EfFD7608213AE1745873385515c18`\n\nwhich corresponds to the address for the DAO Multisig. This allows the DAO Multisig to call `addGaugeFactory` on the pseudo minter.\n\n#2\nThe DAO Multisig on Gnosis `gno:0x2a5AEcE0bb9EfFD7608213AE1745873385515c18` will interact with the pseudo minter `0xA8920455934Da4D853faac1f94Fe7bEf72943eF1` calling `addGaugeFactory` with the following argument:\n\nfactory: `0x83E443EF4f9963C77bd860f94500075556668cb8`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/tasks/20230316-child-chain-gauge-factory-v2/output/gnosis.json).\n\nThis adds the child chain factory to the pseudo minter.\n\n#3\nThe DAO Multisig on Gnosis `gno:0x2a5AEcE0bb9EfFD7608213AE1745873385515c18` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `renounceRole` with the following arguments:\n\nrole: `0xff178bcb549aae01d4613b3ca6c16f1fa42e808cd1bddd210756b3878cfa9268`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/gnosis/action-ids.json#L646).\n\naccount: `0x2a5AEcE0bb9EfFD7608213AE1745873385515c18`\n\nwhich corresponds to the address for the DAO Multisig. This removes the role added above.\n\n\n### Optimism\n#1\nThe DAO Multisig on Optimism `oeth:0x043f9687842771b3dF8852c1E9801DCAeED3f6bc` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `grantRole` with the following arguments:\n\nrole: `0x212ccfca4a02e0eff2a0a5029495a2697d4efa7a8e95cdbf30e2f38c40ca648f`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/optimism/action-ids.json#L646).\n\naccount: `0x043f9687842771b3dF8852c1E9801DCAeED3f6bc`\n\nwhich corresponds to the address for the DAO Multisig. This allows the DAO Multisig to call `addGaugeFactory` on the pseudo minter.\n\n#2\nThe DAO Multisig on Optimism `oeth:0x043f9687842771b3dF8852c1E9801DCAeED3f6bc` will interact with the pseudo minter `0x4fb47126Fa83A8734991E41B942Ac29A3266C968` calling `addGaugeFactory` with the following argument:\n\nfactory: `0xa523f47A933D5020b23629dDf689695AA94612Dc`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/tasks/20230316-child-chain-gauge-factory-v2/output/optimism.json).\n\nThis adds the child chain factory to the pseudo minter.\n\n#3\nThe DAO Multisig on Optimism `oeth:0x043f9687842771b3dF8852c1E9801DCAeED3f6bc` will interact with the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling `renounceRole` with the following arguments:\n\nrole: `0x212ccfca4a02e0eff2a0a5029495a2697d4efa7a8e95cdbf30e2f38c40ca648f`\n\ncan be confirmed [here ](https://github.com/balancer/balancer-v2-monorepo/blob/98e3d8c9be5a175f599c4e95d3ed3757bbc4e307/pkg/deployments/action-ids/optimism/action-ids.json#L646).\n\naccount: `0x043f9687842771b3dF8852c1E9801DCAeED3f6bc`\n\nwhich corresponds to the address for the DAO Multisig. This removes the role added above.",
        "end_utc": "2023-05-08T18:00:00Z",
        "similarity_score": 0.1522,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way",
            "Abstain"
          ],
          "scores": [
            3360215.2587048276,
            0.27172151786857013,
            0.9050014689780576
          ],
          "scores_total": 3360216.4354278147,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2023-05-08T18:00:00",
          "pre_tvl_avg": 1251654266.0,
          "post_tvl_avg": 1152722354.5,
          "abnormal_change": -7.9041,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.079041,
          "abnormal_change_pct": -7.9041
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2023-05-08T18:00:00",
          "pre_price_avg": 6.02602471,
          "post_price_avg": 5.562806095,
          "abnormal_change": -7.687,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.07687,
          "abnormal_change_pct": -7.687
        }
      }
    },
    {
      "proposal_id": "0xafc1f94a4a4e3179f18b95fbd096a84b27ea84c66cbc0c21c88687309883c449",
      "cleaned": {
        "proposal_id": "0xafc1f94a4a4e3179f18b95fbd096a84b27ea84c66cbc0c21c88687309883c449",
        "title": "Empower BalancerDAO to Add Approved Gauges to veBAL Voting",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "end_utc": "2022-04-28T19:00:00Z",
        "similarity_score": 0.1417,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 123586.79296141003,
        "margin_pct": 0.9977058341011477,
        "scores_total": 123870.9735247281,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 69,
        "total_votes": 69,
        "first_vote_at": "2022-04-25T19:08:55Z",
        "last_vote_at": "2022-04-28T15:14:13Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ],
          [
            1.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            69970.09007278824,
            0.0
          ],
          [
            9326.465480678904,
            0.0
          ],
          [
            42287.67793995724,
            142.09028165905588
          ],
          [
            2144.6497496446377,
            0.0
          ]
        ],
        "spike_index": 0.240021,
        "spike_follow_support_ratio": 0.972042,
        "stairwise_ratio": 0.289814,
        "half_slope_diff": -9.148327
      },
      "raw": {
        "id": "0xafc1f94a4a4e3179f18b95fbd096a84b27ea84c66cbc0c21c88687309883c449",
        "title": "Empower BalancerDAO to Add Approved Gauges to veBAL Voting",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "body": "This proposal appears on [Balancer's forum](https://forum.balancer.fi/t/proposal-empower-balancerdao-to-add-approved-gauges-to-vebal-voting/3045)\n\n## Introduction\n\nThe launch of veBAL has introduced the gauge voting system where veBAL lockers determine BAL emissions by voting for specific pool gauges. A flow has been created on the forum to facilitate approval of new gauges with several votes already passing in just the first three weeks. This proposal aims to streamline this process by delegating the power to add approved gauges to the voting list to the Balancer DAO.\n\n*It is important to make clear that no gauge will be added by BalancerDAO without going through the forum process for approving a new gauge and successfully completing a snapshot vote in favor.*\n\n## Motivation\n\nTo alleviate the workload from the DAO Multisig, I am proposing to delegate the power to add approved gauges to this gnosis safe: `0xc38c5f97B34E175FFd35407fc91a937300E33860`. This safe already has the power to add new gauges for token rewards other than BAL so it makes sense to keep all gauge activities in the same place. Signers include myself, Mike B, Andrea, Xeonus, Zekraken, Luuk, and Markus who are some of the longest serving and most reliable members of Balancer DAO.\n\nThis group of signers will be responsible for ensuring that only approved gauges and gauges which have been correctly set up are added to the voting list. In practice this means the following:\n\n* Ensuring that each forum proposal for a gauge gets adequate attention and that only pools with legitimate tokens are allowed to go for a vote (we don’t want to give BAL emissions to a pool with Uniswap LP tokens or an obvious scam token)\n* For L2 gauges, checking that the root gauge has been correctly set up\n  * Checking that the root gauge’s recipient getRecipient() is the address of the streamer contract on L2\n  * Checking that the L2 gauge contract comes from the L2 factory (factory.isGaugeFromFactory(streamer))\n  * Checking that the L2 gauge’s reward_contract is the streamer\n  * Checking that the recipient reward_reciever() is a gauge with the LP token matching the pool from the approved vote\n\nFor reference:\n\n* Polygon Root Gauge Factory - https://etherscan.io/address/0x4C4287b07d293E361281bCeEe8715c8CDeB64E34#code\n* Arbitrum Root Gauge Factory - https://etherscan.io/address/0xad901309d9e9DbC5Df19c84f729f429F0189a633#code\n* Polygon Child Chain Liquidity Gauge Factory - https://polygonscan.com/address/0x3b8cA519122CdD8efb272b0D3085453404B25bD0\n* Arbitrum Child Chain Liquidity Gauge Factory - https://arbiscan.io/address/0xb08E16cFc07C684dAA2f93C70323BAdb2A6CBFd2\n\n## Specification\n\nThe DAO Multisig `0x10A19e7eE7d7F8a52822f6817de8ea18204F2e4f` will initiate a transaction to the Authorizer `0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6` calling the function `grantRoles` with the following arguments:\n\n`roles: [0x5dce9596402d216d8b1fa2b9f8e18b0dc1b5c81f96e0827c6cc83eba6e2205d4,0xeb223764963bceacbb06d72a3697801c2460ddf95b2ec410d2641d69249d466f,0x72c4c054ad03b4f5f0ba716c30d74c6f27fafb105c850cb59e2b6fec32a42f2f]`\n\n`account: 0xc38c5f97B34E175FFd35407fc91a937300E33860`\n\nImmediately following a gauge approval vote that passed successfully, the signers of this multisig `0xc38c5f97B34E175FFd35407fc91a937300E33860` will perform the checks outlined above then initiate a transaction to the Gauge Adder `0xEd5ba579bB5D516263ff6E1C10fcAc1040075Fe2` calling the relevant function depending on the network to add the gauge to the voting list.",
        "end_utc": "2022-04-28T19:00:00Z",
        "similarity_score": 0.1417,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way"
          ],
          "scores": [
            123728.88324306908,
            142.09028165905588
          ],
          "scores_total": 123870.9735247281,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2022-04-28T19:00:00",
          "pre_tvl_avg": 2341855169.0,
          "post_tvl_avg": 2162653848.5,
          "abnormal_change": -7.6521,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.076521,
          "abnormal_change_pct": -7.6521
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2022-04-28T19:00:00",
          "pre_price_avg": 14.50003855,
          "post_price_avg": 12.447297635,
          "abnormal_change": -14.1568,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.141568,
          "abnormal_change_pct": -14.1568
        }
      }
    },
    {
      "proposal_id": "0x23f6e8f79a88c7a94ada7b303a6d74aca1318b15f4e0def8910b8052f0bfc694",
      "cleaned": {
        "proposal_id": "0x23f6e8f79a88c7a94ada7b303a6d74aca1318b15f4e0def8910b8052f0bfc694",
        "title": "[BIP-289] Grant Maxis Permissions to Add Gnosis & zkSync Gauges",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "end_utc": "2023-05-15T18:00:00Z",
        "similarity_score": 0.1394,
        "winning_option": "Yes, let's do it",
        "winning_option_index": 0,
        "margin_abs": 3679958.519118217,
        "margin_pct": 0.9999998032285474,
        "scores_total": 3679959.2432291424,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 142,
        "total_votes": 142,
        "first_vote_at": "2023-05-11T18:02:33Z",
        "last_vote_at": "2023-05-15T16:20:57Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ],
          [
            1.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            45896.42431371435,
            0.3571891493818583,
            0.0
          ],
          [
            179920.1426701094,
            0.0,
            0.0
          ],
          [
            92.3835982942195,
            0.004866313790985612,
            0.0
          ],
          [
            3454049.930591562,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.811672,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 1.1e-05,
        "half_slope_diff": 8.55922
      },
      "raw": {
        "id": "0x23f6e8f79a88c7a94ada7b303a6d74aca1318b15f4e0def8910b8052f0bfc694",
        "title": "[BIP-289] Grant Maxis Permissions to Add Gnosis & zkSync Gauges",
        "author": "0x512fce9B07Ce64590849115EE6B32fd40eC0f5F3",
        "body": "## [Payload PR - BIP-289](https://github.com/BalancerMaxis/multisig-ops/pull/174)\n\n## Background\nThe Gauge Adder v3 was deployed some time ago but only now has become usable after the introduction of the Authorizer Wrapper. This proposal grants the Maxi LM Multisig two roles - one for calling `addGnosisGauge` and one for calling `addZksyncGauge`. Note that we are not fully deployed on zkSync yet.\n\nThis will remove the need to involve the DAO Multisig when adding new gauges.\n\n## English Specification\n\nThe transaction details were generated by [this script](https://github.com/BalancerMaxis/multisig-ops/blob/main/tools/python/gen_add_permissions_payload.py) with inputs and outputs in [this directory](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-289)\n\nThe following files can be found both linked below and in the payload PR linked above:\n\n| Filename                                                                                                                             | Description of Contents                                                                                                              |\n|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------|\n| [inputs.json](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/inputs.json)                                   | The inputs to the script mapping functions and deployments to target addresses that can execute them.                                |\n| [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/results_address_sorted.md)       | The resulting changes printed in a table sorted by target chain and target address. (to easily understand permisisons granted)       |\n| [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/results_deployment_sorted.md) | The resulting changes printed in a table sorted by target chain and target deployment. (for verification against action ids)         |\n| [function_descriptions.md](https://github.com/BalancerMaxis/multisig-ops/blob/staging/BIPs/BIP-289/function_descriptions.md)         | A table that describes what each function that is being granted privileged access to allows.                                         |                                                                                                                                             |\n| [`chainname`.json](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-289/)                                         | For each change with changes, a transaction builder json named after said chain exists to apply the changes described in the tables. |\n\n_More information about the various Balancer Multisigs and their functions can be found in the [multisig-ops repo](https://github.com/BalancerMaxis/multisig-ops/blob/staging/multisigs.md)_\n\n# Specification\n\nAs described in the payload json, the authorizer will be called to grant the roles as described.  \n\nThe change can be reviewed by the below by comparing the [results_deployment_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-183/results_deployment_sorted.md) file to the source of truth,  which should match the order found in the source of truth for actionIds on the [balancer-v2-monorepo](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments/action-ids).\n\nFor record, the contents of [results_address_sorted.md](https://github.com/BalancerMaxis/multisig-ops/tree/staging/BIPs/BIP-289/results_address_sorted.md) are printed here:\n\n\n\n| deployment              | chain   | function                | role                                                               | target   | target_address                             |\n|:------------------------|:--------|:------------------------|:-------------------------------------------------------------------|:---------|:-------------------------------------------|\n| 20230109-gauge-adder-v3 | mainnet | addGnosisGauge(address) | 0xe818738e338905496f604a2a26c7ca754558870a3810786cfbb89ae28d262dc5 | lm       | 0xc38c5f97B34E175FFd35407fc91a937300E33860 |\n| 20230109-gauge-adder-v3 | mainnet | addZKSyncGauge(address) | 0x010cab59e1860b78f8f67210e267d2c06d77c17b4529f007c7c8acee11ea2fe0 | lm       | 0xc38c5f97B34E175FFd35407fc91a937300E33860 |\n## Risk Assessment\nThis BIP is routine operation for provisioning a new factory.  The new factories are themselves a risk mitigation.\n\n\n## References\n\n[Monorepo Deployment Addresses](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/pkg/deployments)",
        "end_utc": "2023-05-15T18:00:00Z",
        "similarity_score": 0.1394,
        "vote_result": {
          "choices": [
            "Yes, let's do it",
            "No, this is not the way",
            "Abstain"
          ],
          "scores": [
            3679958.88117368,
            0.3620554631728439,
            0
          ],
          "scores_total": 3679959.2432291424,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "balancer-v1+balancer-v2+balancer-v3",
          "protocol_slugs": [
            "balancer-v1",
            "balancer-v2",
            "balancer-v3"
          ],
          "status": "success",
          "aggregation": "sum",
          "event_time_utc": "2023-05-15T18:00:00",
          "pre_tvl_avg": 1107959574.0,
          "post_tvl_avg": 1104989448.5,
          "abnormal_change": -0.2681,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": -0.002681,
          "abnormal_change_pct": -0.2681
        },
        "price_impact": {
          "token_id": "5728",
          "ticker": "BAL",
          "status": "success",
          "event_time_utc": "2023-05-15T18:00:00",
          "pre_price_avg": 5.5291013499999995,
          "post_price_avg": 5.53430832,
          "abnormal_change": 0.0942,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.000942,
          "abnormal_change_pct": 0.0942
        }
      }
    }
  ],
  "semantic_references": [],
  "decision": {
    "snapshot_url": "https://snapshot.org/#/balancer.eth/proposal/0x3b09eeb26d102d4b30da56094f4bb9ab772242ccfab52b9eb03ca82eec32c343",
    "selected_choice_label": "Yes, let's do it",
    "selected_choice_index": 0,
    "confidence": 0.95,
    "summary": "Proposal to grant LM multisig permission to set reward distributor on gauge contracts to streamline operational control with unanimous vote support and neutral forum sentiment.",
    "key_arguments_for": [
      "Unanimous vote support with strong early and stable voting patterns.",
      "Operational efficiency gain by delegating distributor permission to LM multisig without requiring governance votes.",
      "Similar past proposals passed with unanimous support indicating community trust in this operational approach.",
      "Forum sentiment is neutral, showing no community opposition or concern."
    ],
    "key_arguments_against": [
      "Historical similar proposals showed some negative TVL impact post-vote, indicating potential operational risks.",
      "Limited forum discussion reduces broader community feedback visibility."
    ],
    "evidence": [
      {
        "source_tool": "forums_fetch_discussion",
        "reference": "https://forum.balancer.fi/t/bip-685-grant-lm-multisig-permission-to-set-reward-distributor/5964",
        "quote": "Two neutral comments with no clear opposition or support."
      },
      {
        "source_tool": "timeline_analyze_timeline",
        "reference": "Balancer Proposal 0x3b09eeb26d102d4b30da56094f4bb9ab772242ccfab52b9eb03ca82eec32c343",
        "quote": "Unanimous lead for 'Yes, let's do it' with stability and early ratio at 1.0."
      },
      {
        "source_tool": "adjacent_analytics",
        "reference": "Similar proposals BIP-684, BIP-683, BIP-682",
        "quote": "Similar unanimous 'Yes' votes with some negative price and TVL impacts post-vote."
      }
    ],
    "available_choices": [
      "Yes, let's do it",
      "No, this is not the way",
      "Abstain"
    ],
    "event_start_utc": "2024-08-29T18:00:00Z",
    "event_end_utc": "2024-09-02T18:00:00Z",
    "event_time_utc": "2024-09-02T18:00:00Z",
    "address_of_governance_token": "0xba100000625a3754423978a60c9317c58a424e3D",
    "token_price_impact_pct": 1.9204,
    "tvl_impact_pct": -2.5295,
    "actual_vote_result": {
      "winner_label": "Yes, let's do it",
      "winner_index": 0,
      "scores": [
        2552865.962378886,
        0.0,
        13948.93079381212
      ],
      "scores_total": 2566814.893172698,
      "margin_abs": 2538917.031585074,
      "margin_pct": 0.989131
    },
    "simulation_reason": null,
    "references": null,
    "decision_stance": "Change",
    "ai_final_conclusion": "Option 'Yes, let's do it' selected with stance to keep 'Change'.",
    "ai_final_reason": "- Timeline voting shows unanimous support and high stability for 'Yes, let's do it'.\n- Forum sentiment is neutral, showing no conflict with vote outcome; recommendation mirrors community opinion.\n- Operational rationale is strong to delegate distributor permissions to LM multisig, improving efficiency without needing governance votes.\n- Similar proposals had unanimous support but some negative market impacts, indicating need for careful monitoring post-implementation.\n- Market impact is neutral to slightly positive price and slight TVL decrease, not decisive but not negative.",
    "similar_proposals": [
      {
        "proposal_id": "0x81d5e131b723ae045203c9a8b711660d1e1c9743e0d9c8a56ea012d7ee06a75f",
        "title": "[BIP-683] Enable gauge for aGHO/USDe E-CLP [Arbitrum]",
        "end_utc": "2024-08-26T18:00:00Z",
        "summary": "[BIP-683] Enable gauge for aGHO/USDe E-CLP [Arbitrum] closed on 2024-08-26T18:00:00Z. Timeline analytics noted 9 unique voters, timeline-only analysis (no final tally), recommended option index 0.",
        "similarity_reason": "Related text overlap (score 0.11)",
        "market_response": "token -10.41%; TVL -10.20%",
        "change_stance": "To change"
      },
      {
        "proposal_id": "0x665666c67ce74dd1be667101dd37e3f0b42304e1b3efd9b800da3f964cc8178d",
        "title": "[BIP-682] Enable sUSDe/GYD E-CLP gauge [Ethereum]",
        "end_utc": "2024-08-26T18:00:00Z",
        "summary": "[BIP-682] Enable sUSDe/GYD E-CLP gauge [Ethereum] closed on 2024-08-26T18:00:00Z. Timeline analytics noted 8 unique voters, timeline-only analysis (no final tally), recommended option index 0.",
        "similarity_reason": "Related text overlap (score 0.11)",
        "market_response": "token -10.41%; TVL -10.20%",
        "change_stance": "To change"
      }
    ],
    "ex_post_price_impact_pct": 1.9204,
    "ex_post_tvl_impact_pct": -2.5295,
    "ex_post_window": "3d pre / 3d post around event end",
    "ex_post_note": "Token price +1.92%; TVL -2.53%"
  },
  "agentic_ai_choice": "Yes, let's do it",
  "actual_outcome": "Yes, let's do it",
  "match_result": "same",
  "forum_sentiment_summary": {
    "Negative": 0,
    "Positive": 0,
    "Neutral": 2,
    "total_comments": 2
  }
}