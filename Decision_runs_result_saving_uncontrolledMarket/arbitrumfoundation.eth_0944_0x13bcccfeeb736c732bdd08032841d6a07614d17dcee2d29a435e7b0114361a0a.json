{
  "captured_at_utc": "2025-10-08T02:47:57.108515+00:00",
  "snapshot_url": "https://snapshot.org/#/arbitrumfoundation.eth/proposal/0x13bcccfeeb736c732bdd08032841d6a07614d17dcee2d29a435e7b0114361a0a",
  "focus": null,
  "votes_count": 5500,
  "timeline_metrics_current": {
    "unique_voters": 5500,
    "total_votes": 5500,
    "first_vote_at": "2024-03-05T16:32:27Z",
    "last_vote_at": "2024-03-07T09:49:01Z",
    "series_step_hours": 6.0,
    "summary": "timeline-only analysis (no final tally)",
    "recommended_index": 0,
    "lead_ratio_by_quartile": [
      [
        1.0,
        0.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0,
        0.0
      ]
    ],
    "lead_ratio_total": [
      1.0,
      0.0,
      0.0,
      0.0
    ],
    "stability": [
      1.0,
      0.0,
      0.0,
      0.0
    ],
    "early_ratio": [
      1.0,
      0.0,
      0.0,
      0.0
    ],
    "vp_by_quartile": [
      [
        76109401.44105029,
        44406.35512118937,
        50174.30895517994,
        13723.402375807585
      ],
      [
        0.0,
        0.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0,
        0.0
      ],
      [
        0.0,
        0.0,
        0.0,
        0.0
      ]
    ],
    "spike_index": 0.348461,
    "spike_follow_support_ratio": 0.820649,
    "stairwise_ratio": 0.001461,
    "half_slope_diff": -419.354508
  },
  "adjacent_analytics": [
    {
      "id": "0x4e064bc3f7335eb5b3b998c3b21921995d43b5c3d225da53897acaf57b51e826",
      "title": "[Constitutional] Changes to the Constitution and the Security Council Election Process",
      "author": "0xA7860E99e3ce0752D1ac53b974E309fFf80277C6",
      "end_utc": "2024-02-05T17:17:50Z",
      "timeline_metrics": {
        "unique_voters": 5500,
        "total_votes": 5500,
        "first_vote_at": "2024-01-29T17:18:35Z",
        "last_vote_at": "2024-01-30T06:35:31Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            1940210.7087787127,
            53883.99742077584,
            271734.65923427924
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.361327,
        "spike_follow_support_ratio": 0.551432,
        "stairwise_ratio": 0.028031,
        "half_slope_diff": 13.265016
      },
      "price_impact_pct": 3.8771,
      "tvl_impact_pct": 2.2198,
      "similarity": 0.0789,
      "actual_vote_result": {
        "winner_index": 0,
        "winner_label": "For",
        "margin_abs": 154882911.1688698,
        "scores_total": 155852384.41487733,
        "margin_pct": 0.9937795417782842
      }
    }
  ],
  "similar_proposals_data": [
    {
      "proposal_id": "0xc591f79422bf26faf13055df098142569785c04316fdae5be993e282721eb717",
      "cleaned": {
        "proposal_id": "0xc591f79422bf26faf13055df098142569785c04316fdae5be993e282721eb717",
        "title": "Constitutional AIP - Security Council Improvement Proposal",
        "author": "0x1B686eE8E31c5959D9F5BBd8122a58682788eeaD",
        "end_utc": "2024-01-25T21:33:46Z",
        "similarity_score": 0.1498,
        "winning_option": "Increase the threshold to 9/12",
        "winning_option_index": 0,
        "margin_abs": 91276651.83582653,
        "margin_pct": 0.6884724827427418,
        "scores_total": 132578504.04158193,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 5500,
        "total_votes": 5500,
        "first_vote_at": "2024-01-18T21:34:33Z",
        "last_vote_at": "2024-01-19T11:40:19Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            0.880545,
            0.0,
            0.0,
            0.113636,
            0.005818
          ],
          [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          0.8805454545454545,
          0.0,
          0.0,
          0.11363636363636363,
          0.005818181818181818
        ],
        "stability": [
          0.8805454545454545,
          0.0,
          0.0,
          0.11363636363636363,
          0.005818181818181818
        ],
        "early_ratio": [
          0.8805454545454545,
          0.0,
          0.0,
          0.11363636363636363,
          0.005818181818181818
        ],
        "vp_by_quartile": [
          [
            5214902.54693454,
            54101.17721028191,
            55339.90020240287,
            69445.14030198613,
            254805.91372189013
          ],
          [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.818422,
        "spike_follow_support_ratio": 0.910966,
        "stairwise_ratio": 0.01575,
        "half_slope_diff": -420.992295
      },
      "raw": {
        "id": "0xc591f79422bf26faf13055df098142569785c04316fdae5be993e282721eb717",
        "title": "Constitutional AIP - Security Council Improvement Proposal",
        "author": "0x1B686eE8E31c5959D9F5BBd8122a58682788eeaD",
        "body": "### **Abstract**\n\nThis AIP seeks to propose changes to the structure of the security council so Arbitrum can maintain the “Stage 1” designation as per L2BEAT and not fall back to “Stage 0” designation.\n\n### **Motivation**\n\nOn December 7, [L2BEAT published an update](https://medium.com/l2beat/stages-update-security-council-requirements-4c79cea8ef52) to the security council requirements for the [Stages Framework](https://medium.com/l2beat/introducing-stages-a-framework-to-evaluate-rollups-maturity-d290bb22befe). The requirements were updated after a lot of research and feedback to make Stages more formal and precise. \n\n### **Rationale**\n\nUpgrading the security council as per the Stage 1 requirements set by L2BEAT, will help ensure Arbitrum remains decentralized, but properly secured. See ‘Specifications’ for more details.\n\n### **Key Terms**\n\n**Stages:** A framework, inspired by [Vitalik’s proposed milestones](https://ethereum-magicians.org/t/proposed-milestones-for-rollups-taking-off-training-wheels/11571), that categorises rollups into three distinct stages based on their reliance on these training wheels. You can learn [more about the Stages framework here](https://medium.com/l2beat/introducing-stages-a-framework-to-evaluate-rollups-maturity-d290bb22befe).\n\n**Security Council:** A group of 12 individuals who are responsible for addressing risks to the Arbitrum ecosystem through the selective application of **e**mergency actions and non-emergency actions. Learn more in [the ArbitrumDAO Docs](https://docs.arbitrum.foundation/concepts/security-council).\n\n**Timelock:** Smart contracts which implement a delay between an upgrade confirmation and execution.\n\n**Exit Window:** The actual time users have to exit the system in case of an unwanted upgrade.\n\n### **Specifications**\n\nArbitrum currently has two multisigs and they both contain the same set of members:\n\na) A 9/12 multisig with instant upgrade power \n\nb) A 7/12 multisig that can upgrade with a 3+7+3 days delay \n\nWhile the higher threshold multisig can be classified as a Security Council, the lower one is below the minimum threshold and it’s considered a simple multisig according to the Stages framework introduced above.\n\nFor normal multisigs, L2BEAT requires at least a 7 days exit window for users. The current exit window for Arbitrum is 2 days (see [this thread](https://x.com/stonecoldpat0/status/1737840485967032739?s=20) for a quick explanation).\n\nMoreover, the higher threshold multisig is supposed to stop malicious upgrades attempted by the lower threshold multisig. However, since the member set is the same, if the lower threshold agrees on something there are not enough members in the higher threshold to stop them, which means that the actual security of the upgradeability mechanism boils down to the 7/12 threshold.\n\nFor the above reason, technically, with the updated requirements for Stages, Arbitrum falls back to the Stage 0 designation. Since we know that it takes time to upgrade Arbitrum, we decided to leave the Stage 1 designation with the promise of addressing the above issues in a timely manner. This proposal is about addressing the issues and moving them to be voted on by the DAO.\n\n**Proposed Solutions**\n\n1) The **first solution** would be to remove the lower threshold (7/12) multisig entirely. This can be done in two ways:\n\n1. The contract is removed which requires an on-chain upgrade, or,\n2. The lower threshold multisig increases its threshold from 7/12 to 9/12 which requires no upgrade.\n\nIncreasing the threshold gives us the flexibility to restore a lower threshold in the future should the need arise, and it’s also a very quick and easy fix since it doesn’t require an on-chain upgrade.\n\nOn the other hand, removing the dependency on the lower threshold mutlisig for all the contracts in Arbitrum is a broad and potentially risky change. Therefore we suggest raising the threshold for the time being and revisiting the removal of all the dependencies at a later date if needed.\n\n2) The **second solution** would be to leave the lower threshold multisig as it is, but to increase the exit window to 7 days. In practice, this involves increasing the L2 timelock delay from 3 days to 8 days, since there is a 1 day max delay to force transactions on Arbitrum via L1 using the ‘DelayedInbox’. Increasing the L1 Timelock would not be very beneficial due to delay attacks on the fraud proof systems, since, even with BoLD,  the challenge period would end up being up to [16 days](https://x.com/DZack23/status/1737864854059335905?s=20).\n\n3) The **third solution**, which is not strictly required by the Stages Framework for the Stage 1 designation, is to both remove the lower threshold multisig entirely and increase the L2 Timelock delay so users have more time to exit in case of unwanted upgrades, increasing the security of the system even more.\n\n### Steps to Implement\n\nFollowing a week of discussion of this RFC, the proposal will go for a vote on Snapshot with the following 6 options (as they are or slightly adjusted), and/or any additional ones, should they arise from the discussion during the RFC phase:\n\n1. Increase the threshold from 7/12 to 9/12.\n2. Increase the L2 timelock delay from 3 days to 8 days.\n3. Increase the threshold and the L2 timelock delay.\n4. Make no changes.\n\nFollowing the temp-check, if any of the aforementioned options apart from No.4 is the most popular, the proposal will move to on-chain vote to execute the proposal.\n\n### **Overall Cost**\n\nThere’s no overhead to the DAO for the implementation of this proposal.\n\n### **Timeline**\n\n**RFC -** January 11th to January 18th\n\n**Snapshot -** January 18th to January 25th\n\n**On-Chain Vote:** January 30th to February 13th\n\n**Execution Delay:**\n\n- February 13th to February 16th - L2 Waiting Period\n- February 16th to February 23rd - L2-to-L1 Message\n- February 23rd to February 27th - L1 Waiting Period\n\n**Please note the aforementioned timeline is tentative and the actual timeline might be slightly different.**",
        "end_utc": "2024-01-25T21:33:46Z",
        "similarity_score": 0.1498,
        "vote_result": {
          "choices": [
            "Increase the threshold to 9/12",
            "Increase the L2 timelock delay",
            "Increase the threshold and delay",
            "Make no changes.",
            "Abstain"
          ],
          "scores": [
            111076415.5097518,
            561076.31516187,
            19799763.673925266,
            168853.48141676493,
            972395.061326395
          ],
          "scores_total": 132578504.04158193,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "arbitrum",
          "status": "tvl_data_unavailable",
          "error": "Could not fetch TVL data: TVL cache not found for slug='arbitrum'"
        },
        "price_impact": {
          "token_id": "11841",
          "ticker": "ARB",
          "status": "success",
          "event_time_utc": "2024-01-25T21:33:46",
          "pre_price_avg": 1.712026895,
          "post_price_avg": 1.7967743999999999,
          "abnormal_change": 4.9501,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.049501,
          "abnormal_change_pct": 4.9501
        }
      }
    },
    {
      "proposal_id": "0xa635e39a2c527f7a1eabf5ea22bdec6f4a265d6c69a06076e65fde0ae0a5941b",
      "cleaned": {
        "proposal_id": "0xa635e39a2c527f7a1eabf5ea22bdec6f4a265d6c69a06076e65fde0ae0a5941b",
        "title": "AIP: ArbOS Version 11",
        "author": "0xb5B069370Ef24BC67F114e185D185063CE3479f8",
        "end_utc": "2023-12-04T22:11:25Z",
        "similarity_score": 0.1327,
        "winning_option": "For",
        "winning_option_index": 0,
        "margin_abs": 168104137.46013948,
        "margin_pct": 0.9976092691956788,
        "scores_total": 168506992.31741625,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 5500,
        "total_votes": 5500,
        "first_vote_at": "2023-11-27T22:11:54Z",
        "last_vote_at": "2023-11-28T08:04:09Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            10415056.106401827,
            14648.050600593342,
            7295.064165670068
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.628899,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 0.003832,
        "half_slope_diff": 79.726091
      },
      "raw": {
        "id": "0xa635e39a2c527f7a1eabf5ea22bdec6f4a265d6c69a06076e65fde0ae0a5941b",
        "title": "AIP: ArbOS Version 11",
        "author": "0xb5B069370Ef24BC67F114e185D185063CE3479f8",
        "body": "# AIP: ArbOS Version 11\n\n# Constitutional\n\n## Abstract\n\nThis AIP introduces a number of improvements to Arbitrum chains, including support for the EVM Shanghai upgrade and the PUSH0 opcode, along with miscellaneous bug fixes. These improvements are now audited and ready for adoption, including by Arbitrum Orbit chains, Arbitrum One, and Arbitrum Nova. This proposal concerns the latter two, as they are governed by the Arbitrum DAO. On a high level an ArbOS upgrade can be seen as Arbitrum's equivalent of a hardfork - more can be read about the subject over in https://forum.arbitrum.foundation/t/arbitrum-arbos-upgrades/19695\n\n## Changes Included\n\n### 1. EVM Shanghai support (including the PUSH0 opcode)\n\nRecent versions of go-ethereum already includes support for the changes to the EVM made in the Shanghai L1 upgrade, but we need to enable them for Arbitrum chains. Instead of using a time based activation, it’s better to activate support based on the ArbOS version, which makes sure that even if the upgrade is delayed, Shanghai support will take effect uniformly and without causing divergences with out of date node software.\n\nPRs: \nhttps://github.com/OffchainLabs/nitro/pull/1583 \nhttps://github.com/OffchainLabs/nitro/pull/1664  \nhttps://github.com/OffchainLabs/nitro/pull/1712\n\n### 2. Retryable fixes\n\nRetryable fees previously always used the network fee account, instead of also using the infrastructure fee account. The infrastructure fee account should be paid fees from the basefee, and the network fee account should be paid any surplus fees when the gas price is elevated. That was correctly implemented for normal transactions, but retryables only dealt with the network fee account. Retryable redemption also reported an incorrect gas usage in the block header. This matters to Arbitrum Nova, where the infrastructure fee account pays out some fees to the Data Availability Committee members, but the network fee account does not.\n\nPRs: \nhttps://github.com/OffchainLabs/nitro/pull/1789\nhttps://github.com/OffchainLabs/nitro/pull/1980\n\n### 3. Fix the chain owner list returned by precompile\n\nThis change doesn’t affect the actual chain owner set, but the list being returned by the ArbOwnerPublic precompile was incorrect for Arbitrum Nova due to an internal ArbOS issue. To be clear, this does not affect who was able to make chain owner actions. As intended, only the DAO is able to make chain owner actions on Arbitrum One and Arbitrum Nova. This change only affects the list of chain owners presented by the ArbOwnerPublic precompile.\n\nPRs: \nhttps://github.com/OffchainLabs/nitro/pull/1525\nhttps://github.com/OffchainLabs/nitro/pull/1768\n\n### 4. Fix some precompile methods taking up all gas when reverting\n\nSome precompile methods such as ArbSys’s arbBlockHash method took up all gas when reverting. That meant that if a transaction called arbBlockHash with an out-of-range block number, it’d use up all the gas when reverting.\n\nPR: \nhttps://github.com/OffchainLabs/nitro/pull/1490\n\n### 5. Create missing precompile methods to view some L1 pricing parameters\n\nThe L1RewardReceipient and L1RewardRate were previously not exposed via precompiles. This change adds methods to get them to ArbGasInfo so that the current chain configuration can be easily checked.\n\nPR: \nhttps://github.com/OffchainLabs/nitro/pull/1775\n\n### 6. Fix the possibility of a staticcall from the owner to ArbOwner emitting a log\n\nThis shouldn’t matter in practice, but it was theoretically for a staticcall from the chain owner to the ArbOwner precompile to emit a log. In the EVM, staticcalls should never be able to emit logs. This PR fixes the Arbitrum precompile logic to disallow emitting logs in staticcall contexts.\n\nPR: \nhttps://github.com/OffchainLabs/nitro/pull/1562\n\n### 7. Fix default L1 pricing params\n\nThis shouldn’t matter for Arbitrum One and Arbitrum Nova, because these parameters were already corrected in [AIP-7](https://forum.arbitrum.foundation/t/aip-7-arbitrum-one-governance-parameter-fixes/15920). However, it’s included in ArbOS version 11 so that any Arbitrum Orbit chains automatically get the correct parameters.\n\nPR: \nhttps://github.com/OffchainLabs/nitro/pull/1549\n\n## Implementation\n\nThe canonical version of ArbOS 11 this proposal aims to adopt is implemented in the Arbitrum Nitro git commit hash  `df93361a1293574903f28fbbbe0469a3ea5c644d`\n\nThat commit builds a WASM module root of `0xf4389b835497a910d7ba3ebfb77aa93da985634f3c052de1290360635be40c4a`, which is a hash of the code that’s put on-chain for fraud proofs. You can verify this WASM module root on a x86_64 computer (i.e. not on ARM which builds slightly different symbol names) with Docker setup by checking out the previously mentioned commit of the nitro repository, running `git submodule update --init --recursive`, and then running `docker build . --target module-root-calc --tag wavm-machine && docker run --rm wavm-machine cat /workspace/target/machines/latest/module-root.txt` This uses Docker to perform a reproducible build of the WebAssembly code used in fraud proofs, and outputs its hash.\n\nThe above code has audited by Trail of Bits - the audit report can be viewed in https://drive.google.com/file/d/1uwA1PK3AB9ggHMqaw91mubu5WHcEp398/view?usp=sharing\n\n### Upgrade Action smart contracts\n\nThe Action smart contracts used to execute the on-chain upgrade can be viewed in \n\nhttps://github.com/ArbitrumFoundation/governance/pull/170\n\nAction contract addresses:\n[SetArbOneArbOS11ModuleRootAction](https://etherscan.io/address/0xe8e5dc1793d6fe39452ddcb90d12997fa39de1de#code)\n[SetNovaArbOS11ModuleRootAction](https://etherscan.io/address/0x6B125347f3B0790197d5247f32f91fd3e7140eD7#code)\n[SetArbOS11VersionAction](https://arbiscan.io/address/0xF6c7Dc6eaE78aBF2f32df899654ca425Dfa99481#code)\n[SetArbOS11VersionAction](https://nova.arbiscan.io/address/0x5357f4d3e8f8250a77bcddd5e58886ad1358220c#code)\n\n\nThe above code has audited by Trail of Bits - the audit report can be viewed in https://drive.google.com/file/d/1N3197Z7DuqBpu9qdt-GWPewe8HQakfLY/view?usp=sharing\n\n\n\n### Verifying the ArbOS Code Difference\n\nThe current ArbOS version used on Arbitrum One and Arbitrum Nova is ArbOS 10, corresponding to the Arbitrum Nitro `consensus-v10` git tag. You can verify this by running the previously mentioned steps to build the WASM module root on that git tag, which produces the WASM module root `0x6b94a7fc388fd8ef3def759297828dc311761e88d8179c7ee8d3887dc554f3c3`, which is what the rollup contract’s `wasmModuleRoot()` method returns for both Arbitrum One and Arbitrum Nova.\n\nTo audit the code difference from ArbOS 10 to ArbOS 11, you could simple generate a full nitro diff with `git diff consensus-v10 df93361a1293574903f28fbbbe0469a3ea5c644d` (and also generate a diff of the go-ethereum submodule mentioned in that nitro diff). However, that includes a lot of code that isn’t part of the WASM module root. To filter down to just the replay binary which defines the state transition function, you can start by generating a list of files in the nitro and go-ethereum repositories included by the replay binary in either ArbOS 10 or ArbOS 11 with bash:\n\n```\n#!/usr/bin/env bash\nset -e\nmkdir -p ~/tmp # this script uses ~/tmp as scratch space and output\n# this script should be run in the nitro repository\ngit checkout df93361a1293574903f28fbbbe0469a3ea5c644d\ngit submodule update --init --recursive\nmake solgen\ngo list -f \"{{.Deps}}\" ./cmd/replay | tr -d '[]' | sed 's/ /\\\\n/g' | grep 'github.com/offchainlabs/nitro/' | sed 's@github.com/offchainlabs/nitro/@@' | while read dir; do find \"$dir\" -type f -name '*.go' -maxdepth 1; done | grep -v '_test\\\\.go\n```\n\nNow, `~/tmp/replay-binary-dependencies.txt` contains a list of dependencies of the replay binary that were present in ArbOS 10 or 11. To use that to generate a smaller diff of the nitro repository, you can run:\n\n```\ngit diff consensus-v10 df93361a1293574903f28fbbbe0469a3ea5c644d -- cmd/replay $(cat ~/tmp/replay-binary-nitro-dependencies.txt)\n```\n\nFor the go-ethereum submodule, you can first find out what go-ethereum commit ArbOS 10 and 11 used:\n\n```\n$ git ls-tree consensus-v10 go-ethereum                                                                                                                                                                                           128 ↵\n160000 commit 941aa323e5cbbde1d5806eb4e3dd70553c5a1298  go-ethereum\n$ git ls-tree df93361a1293574903f28fbbbe0469a3ea5c644d go-ethereum\n160000 commit abe584818e104dd5b4fdb8f60381a14eede896de  go-ethereum\n```\n\nThose commit hashes are the go-ethereum commit hashes pinned by each nitro commit. Then, you can again use `git diff` and the files generated by the earlier script to generate a diff limited to code used by the replay binary:\n\n```\ngit diff 941aa323e5cbbde1d5806eb4e3dd70553c5a1298 abe584818e104dd5b4fdb8f60381a14eede896de -- $(cat ~/tmp/replay-binary-geth-dependencies.txt)\n```\n\nThis diff also includes the diff between upstream go-ethereum versions v1.10.25 and v1.11.6, as ArbOS 10 used the former and ArbOS 11 uses the latter. To filter out that difference, you can use this tool to find the intersection of two git diffs: https://gist.github.com/PlasmaPower/795af590f88cfb5e21c5ad9b8a32afdf\n\nWe can use that to find the intersection of the diff of ArbOS 11’s go-ethereum against ArbOS 10’s go-ethereum and the diff of ArbOS 11’s go-etheruem against upstream go-ethereum v1.11.6:\n\n```\ngit diff 941aa323e5cbbde1d5806eb4e3dd70553c5a1298 abe584818e104dd5b4fdb8f60381a14eede896de -- $(cat ~/tmp/replay-binary-geth-dependencies.txt) > ~/tmp/arbos-10-vs-11-geth.diff\ngit diff v1.11.6 abe584818e104dd5b4fdb8f60381a14eede896de -- $(cat ~/tmp/replay-binary-geth-dependencies.txt) > ~/tmp/arbos-11-vs-upstream-geth.diff\ndiff-intersection.py ~/tmp/arbos-10-vs-11-geth.diff ~/tmp/arbos-11-vs-upstream-geth.diff\n```\nIn addition, you can pass the following arguments to `diff-intersection.py` to ignore files that are included by the replay binary but whose components are not used: `--ignore-files 'core/blockchain*.go' arbitrum_types/txoptions.go 'rawdb/**' 'rpc/**'`\n\nNote that by default, `diff-intersection.py` does a line based intersection. To instead do an intersection based on chunks in the diff, known as hunks in git terminology, you can add the `--only-hunks` flag.",
        "end_utc": "2023-12-04T22:11:25Z",
        "similarity_score": 0.1327,
        "vote_result": {
          "choices": [
            "For",
            "Against",
            "Abstain"
          ],
          "scores": [
            168238852.0035423,
            134714.5434028188,
            133425.77047071827
          ],
          "scores_total": 168506992.31741625,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "arbitrum",
          "status": "tvl_data_unavailable",
          "error": "Could not fetch TVL data: TVL cache not found for slug='arbitrum'"
        },
        "price_impact": {
          "token_id": "11841",
          "ticker": "ARB",
          "status": "success",
          "event_time_utc": "2023-12-04T22:11:25",
          "pre_price_avg": 1.10536707,
          "post_price_avg": 1.114312305,
          "abnormal_change": 0.8093,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.008093,
          "abnormal_change_pct": 0.8093
        }
      }
    },
    {
      "proposal_id": "0xb0156cfc112bbe4275b0a1d6cacc3970affdad6057047b8cee79ba54d45446aa",
      "cleaned": {
        "proposal_id": "0xb0156cfc112bbe4275b0a1d6cacc3970affdad6057047b8cee79ba54d45446aa",
        "title": "Proposal: Activate support for account abstraction endpoint on One and Nova",
        "author": "0xdb5781a835b60110298fF7205D8ef9678Ff1f800",
        "end_utc": "2023-06-27T00:21:00Z",
        "similarity_score": 0.1255,
        "winning_option": "For",
        "winning_option_index": 0,
        "margin_abs": 60418517.531345926,
        "margin_pct": 0.995235092408238,
        "scores_total": 60707784.514658876,
        "change_stance": "To change"
      },
      "timeline_metrics": {
        "unique_voters": 5500,
        "total_votes": 5500,
        "first_vote_at": "2023-06-20T00:26:07Z",
        "last_vote_at": "2023-06-20T09:49:58Z",
        "series_step_hours": 6.0,
        "summary": "timeline-only analysis (no final tally)",
        "recommended_index": 0,
        "lead_ratio_by_quartile": [
          [
            1.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ]
        ],
        "lead_ratio_total": [
          1.0,
          0.0,
          0.0
        ],
        "stability": [
          1.0,
          0.0,
          0.0
        ],
        "early_ratio": [
          1.0,
          0.0,
          0.0
        ],
        "vp_by_quartile": [
          [
            7196882.205207722,
            2738.1373694542594,
            13367.691953624988
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0,
            0.0
          ]
        ],
        "spike_index": 0.743214,
        "spike_follow_support_ratio": 1.0,
        "stairwise_ratio": 0.057156,
        "half_slope_diff": -133.531556
      },
      "raw": {
        "id": "0xb0156cfc112bbe4275b0a1d6cacc3970affdad6057047b8cee79ba54d45446aa",
        "title": "Proposal: Activate support for account abstraction endpoint on One and Nova",
        "author": "0xdb5781a835b60110298fF7205D8ef9678Ff1f800",
        "body": "Author\nJason Windawi, Alchemy\n\nType\nThis is a Constitutional proposal.\n\nAbstract\nAs part of the broader development of account abstraction standards and tooling, Ethereum researchers have proposed a new RPC endpoint eth_sendRawTransactionConditional that adapts L2 sequencers to the specific needs of ERC-4337 bundlers. Offchain Labs has contributed to this new method by developing, testing and incorporating adjustments necessary to support the endpoint for Arbitrum’s sequencer into Nitro with v.2.0.14, which is now live on the Arbitrum testnet. This AIP proposes that the Arbitrum DAO activate support for this endpoint on the One and Nova mainnets.\n\nMotivation\nEIP-4337 has created significant momentum for account abstraction across the EVM ecosystem. Among other innovations, the proposal split validation and execution into distinct steps in the process of bundling transactions for submission to an alternative mempool. This split introduced a potential issue for bundlers working on their L2 transactions. The delay between simulated transaction validation by the bundlers, and the final inclusion by sequencers, introduces a risk for reverting bundle submissions. This is due to the lag between the initial submission of a transaction and its ultimate inclusion, during which a smart contract account’s storage can change and invalidate the transaction. Reverted bundle transactions result in lost value for the bundler, discouraging operation of these services until the issue is addressed.\n\nEthereum researchers developed the eth_sendRawTransactionConditional endpoint to address this issue. This endpoint adds new options to the standard eth_sendRawTransaction endpoint that allow users to specify valid ranges for block height and timestamps. This will allow sequencers to reject transactions that don’t meet conditions for inclusion during the earlier validation stage, addressing the risk that in-account storage might change between validation and execution.\n\nOffchain Labs developed, tested and implemented a version of the eth_sendRawTransactionConditional endpoint in the v.2.0.14 update to Nitro, and have since implemented the endpoint on the Arbitrum testnet. This proposal requests that the DAO approve activating this endpoint for Arbitrum mainnets.\n\nRationale\nThis proposal directly supports the DAO’s constitutional value of maintaining alignment with the broader Ethereum ecosystem. The eth_sendRawTransactionConditional endpoint was developed by the Ethereum Foundation to address the proposal’s implications for layer 2 sequencers. Variations of this endpoint are being actively explored and developed by prominent EVM L2s and others in the ecosystem, indicating that the need for this endpoint in the context of sequencer/bundler interactions is a known problem with the need for active work toward a solution.\n\nOur proposal is also aligned with the DAO’s objective of ensuring decisions are sustainable over the medium and long term. As Arbitrum continues to push toward decentralization beyond Vitalik’s second milestone, the need for a flexible and secure endpoint for 4337-compliant transactions on Arbitrum will only become more critical.\n\nFinally, the proposal is aligned with the Arbitrum community’s values of social and technical inclusion. By enabling one of the core features of account abstraction, Arbitrum’s ecosystem would have access to the enormous potential for improvements in UX and other benefits of account abstraction.\n\nSpecifications\nPR # 1474 on Github provides a history of the development and testing done by Offchain Labs, as well as the multiple stages of review by the team before it was merged on April 11, 2023. Making the endpoint viable for Arbitrum entailed two key adjustments to the checks performed before transactions reach the sequencer. The most fundamental was a config value change to the load balancer. The protocol’s load balancer has historically limited the computational costs of processing transactions by setting the number of acceptable slots in a transaction to zero. The new endpoint’s design allows for up to 1,000 slots. To accommodate this increase for conditional transactions, PR 1474 removed this 0 restriction for Nitro and for the testnet.\n\nAllowing conditional transactions also introduces a risk of DOS attacks spamming the protocol with transactions regardless of whether they meet the state conditions at the time they were submitted. To address this, Labs updated the Arbitrum sequencer’s pre-check to incorporate a backward-looking validity check of a given account’s state, meaning that transactions can only execute if they met their own conditions as of one second prior to submitting the transaction.\n\nSteps to Implement\nThe work already done by Offchain Labs on this endpoint means that the steps to implement this AIP reduce to changing the load balancer config value as described above.\n\nTimeline\nIdeally ASAP, or as soon as is practical for Offchain Labs.\n\nOverall Cost\nThe upfront costs for implementation should effectively be zero given the work done already by Offchain Labs.",
        "end_utc": "2023-06-27T00:21:00Z",
        "similarity_score": 0.1255,
        "vote_result": {
          "choices": [
            "For",
            "Against",
            "Abstain"
          ],
          "scores": [
            60523829.13279885,
            105311.60145292307,
            78643.78040694348
          ],
          "scores_total": 60707784.514658876,
          "state": "closed"
        },
        "tvl_impact": {
          "protocol_slug": "arbitrum",
          "status": "tvl_data_unavailable",
          "error": "Could not fetch TVL data: TVL cache not found for slug='arbitrum'"
        },
        "price_impact": {
          "token_id": "11841",
          "ticker": "ARB",
          "status": "success",
          "event_time_utc": "2023-06-27T00:21:00",
          "pre_price_avg": 1.12642128,
          "post_price_avg": 1.14506857,
          "abnormal_change": 1.6554,
          "pre_days": 3,
          "post_days": 3,
          "abnormal_change_raw": 0.016554,
          "abnormal_change_pct": 1.6554
        }
      }
    }
  ],
  "semantic_references": [],
  "decision": {
    "snapshot_url": "https://snapshot.org/#/arbitrumfoundation.eth/proposal/0x13bcccfeeb736c732bdd08032841d6a07614d17dcee2d29a435e7b0114361a0a",
    "selected_choice_label": "Set L1 surplus fee and L2 min.",
    "selected_choice_index": 0,
    "confidence": 0.95,
    "summary": "The proposal to set both the L1 surplus fee and L2 minimum base fee is strongly supported by early voting patterns, community sentiment, and adjacent precedent. It aims to optimize fees post-Ethereum Dencun upgrade to maintain competitiveness despite short-term revenue impact.",
    "key_arguments_for": [
      "Early voting timeline shows unanimous strong support for setting both fees, indicating community consensus.",
      "Forum discussion reveals broad approval emphasizing user experience improvement and maintaining Arbitrum's competitive edge.",
      "Adjacent similar proposal also recommended constitutional change with positive market impact and successful outcome.",
      "Community acknowledges short-term revenue reduction but expects increased transaction volume to compensate."
    ],
    "key_arguments_against": [
      "Concerns about significant short-term revenue loss for ArbitrumDAO (estimated 90% profit reduction).",
      "Some requests for more research on optimal fee levels and potential future flexibility in parameter management.",
      "Questions about network security impact from reducing L2 minimum base fee, though addressed by Foundation experts."
    ],
    "evidence": [
      {
        "source_tool": "forums_fetch_discussion",
        "reference": "https://forum.arbitrum.foundation/t/fix-fee-oversight-arbos-v20-atlas/22152",
        "quote": "The community discussion includes multiple endorsements to 'Set L1 surplus fee and L2 min.' with explanations focused on competitiveness and user experience."
      },
      {
        "source_tool": "timeline_analyze_timeline",
        "reference": "Snapshot proposal timeline",
        "quote": "Timeline metrics show a stable and early unanimous lead for the 'Set L1 surplus fee and L2 min.' option."
      },
      {
        "source_tool": "registry_lookup",
        "reference": "arbitrumfoundation.eth",
        "quote": "Governance token address is 0x912CE59144191C1204E64559FE8253a0e49E6548 for token ARB."
      },
      {
        "source_tool": "timeline_analyze_timeline",
        "reference": "Adjacent similar proposal 0x4e064bc3f7335eb5b3b998c3b21921995d43b5c3d225da53897acaf57b51e826",
        "quote": "Previous constitutional change proposal had similar early unanimous support and positive market and TVL impact."
      }
    ],
    "available_choices": [
      "Set L1 surplus fee and L2 min.",
      "Set only L1 surplus fee",
      "Set only L2 minimum base fee",
      "Set neither option and cancel"
    ],
    "event_start_utc": "2024-03-05T16:31:56Z",
    "event_end_utc": "2024-03-12T16:31:56Z",
    "event_time_utc": "2024-03-12T16:31:56Z",
    "address_of_governance_token": "0x912CE59144191C1204E64559FE8253a0e49E6548",
    "token_price_impact_pct": -3.5763,
    "tvl_impact_pct": 0.9143,
    "actual_vote_result": {
      "winner_label": "Set L1 surplus fee and L2 min.",
      "winner_index": 0,
      "scores": [
        200800130.2320098,
        151037.45730578783,
        105199.53000231614,
        39797.76690599165
      ],
      "scores_total": 201096164.98622316,
      "margin_abs": 200649092.774704,
      "margin_pct": 0.997777
    },
    "simulation_reason": null,
    "references": null,
    "decision_stance": "Change",
    "ai_final_conclusion": "Option 'Set L1 surplus fee and L2 min.' selected with stance to keep 'Change'.",
    "ai_final_reason": "- Timeline metrics show a clear and stable early lead for setting both fees, indicating strong community support.\n- Forum sentiment analysis reveals the majority of comments favor the proposal, emphasizing user experience and competitiveness despite short-term revenue loss.\n- Similar past proposals with early consensus have yielded positive market outcomes, reinforcing this approach.\n- Market impact shows a slight negative price change but positive TVL change, suggesting durable network health.\n- The recommendation aligns with aggregated forum sentiment, reflecting community views and maximizing long-term organizational benefit.",
    "similar_proposals": [
      {
        "proposal_id": "0x4e064bc3f7335eb5b3b998c3b21921995d43b5c3d225da53897acaf57b51e826",
        "title": "[Constitutional] Changes to the Constitution and the Security Council Election Process",
        "end_utc": "2024-02-05T17:17:50Z",
        "summary": "[Constitutional] Changes to the Constitution and the Security Council Election Process closed on 2024-02-05T17:17:50Z. Timeline analytics noted 5500 unique voters, timeline-only analysis (no final tally), recommended option index 0.",
        "similarity_reason": "Related text overlap (score 0.08)",
        "market_response": "token +3.88%; TVL +2.22%",
        "change_stance": "To change"
      }
    ],
    "ex_post_price_impact_pct": -3.5763,
    "ex_post_tvl_impact_pct": 0.9143,
    "ex_post_window": "3d pre / 3d post around event end",
    "ex_post_note": "Token price -3.58%; TVL +0.91%"
  },
  "agentic_ai_choice": "Set L1 surplus fee and L2 min.",
  "actual_outcome": "Set L1 surplus fee and L2 min.",
  "match_result": "same",
  "forum_sentiment_summary": {
    "Negative": 10,
    "Positive": 7,
    "Neutral": 9,
    "total_comments": 26
  }
}